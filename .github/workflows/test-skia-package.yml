name: Test Skia Package (Reusable)

on:
  workflow_call:
    inputs:
      skia_version:
        description: 'Skia version to test (version number, "latest", URL to .tgz, or "artifact:RUN_ID")'
        required: true
        type: string
      test_ios:
        description: 'Run iOS tests'
        required: false
        type: boolean
        default: true
      test_android:
        description: 'Run Android tests'
        required: false
        type: boolean
        default: true
      simulator_device:
        description: 'iOS Simulator device'
        required: false
        default: 'iPhone 16 Pro'
        type: string
      android_api_level:
        description: 'Android API level'
        required: false
        default: '30'
        type: string
      android_device:
        description: 'Android device profile'
        required: false
        default: 'Nexus 5X'
        type: string
      test_web:
        description: 'Run Web tests'
        required: false
        type: boolean
        default: true

jobs:
  test-skia-ios:
    if: inputs.test_ios
    runs-on: macos-latest-xlarge
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Yarn
        run: |
          corepack enable
          yarn --version

      - name: Install Expo CLI
        run: |
          npm install -g expo-cli eas-cli
          expo --version

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: List available simulators
        run: xcrun simctl list devices

      - name: Create test directory
        run: |
          mkdir -p /Users/runner/skia-test-app
          cd /Users/runner/skia-test-app
          pwd

      - name: Create Expo app with Skia template
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 120
          command: |
            cd /Users/runner/skia-test-app
            echo "Creating Expo app with Skia template..."
            yarn create expo-app my-app -e with-skia

      - name: Download artifact package if specified
        if: startsWith(inputs.skia_version, 'artifact:')
        run: |
          ARTIFACT_ID=$(echo "${{ inputs.skia_version }}" | sed 's/artifact://')
          echo "Downloading artifact ID: $ARTIFACT_ID"
          gh run download --repo Shopify/react-native-skia $ARTIFACT_ID -n package-tgz -D /tmp
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Install React Native Skia
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          VERSION="${{ inputs.skia_version }}"
          if [ "$VERSION" == "latest" ]; then
            echo "Installing @shopify/react-native-skia@latest..."
            yarn add @shopify/react-native-skia@latest
          elif [[ "$VERSION" == artifact:* ]]; then
            echo "Installing @shopify/react-native-skia from downloaded artifact..."
            yarn add @shopify/react-native-skia@file:/tmp/package.tgz
          elif [[ "$VERSION" == http* ]]; then
            echo "Installing @shopify/react-native-skia from URL: $VERSION"
            yarn add @shopify/react-native-skia@"$VERSION"
          else
            echo "Installing @shopify/react-native-skia@$VERSION..."
            yarn add @shopify/react-native-skia@"$VERSION"
          fi

      - name: Show installed Skia version
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Installed React Native Skia version:"
          yarn list @shopify/react-native-skia --depth=0

      - name: Install TypeScript dependencies
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Installing TypeScript dependencies..."
          npx expo install typescript @types/react

      - name: Install Expo Dev Client
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Installing expo-dev-client..."
          npx expo install expo-dev-client

      - name: Prebuild native directories
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Generating native iOS directory..."
          npx expo prebuild --platform ios

      - name: Install iOS dependencies
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Installing iOS dependencies..."
          cd ios
          pod install --repo-update

      - name: Start Metro bundler
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Starting Metro bundler in background..."
          npx expo start --dev-client &
          sleep 10

      - name: Build and run iOS app
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Building and running iOS app on simulator: ${{ inputs.simulator_device }}..."
          npx expo run:ios --device "${{ inputs.simulator_device }}"

      - name: Wait for app to launch
        run: |
          echo "Waiting for app to launch and stabilize..."
          sleep 30

      - name: Capture simulator screenshot
        if: always()
        run: |
          SIMULATOR_ID=$(xcrun simctl list devices | grep "${{ inputs.simulator_device }}" | grep -E 'Booted' | head -n 1 | cut -d '(' -f 2 | cut -d ')' -f 1)
          if [ -n "$SIMULATOR_ID" ]; then
            echo "Capturing screenshot from simulator ID: $SIMULATOR_ID"
            xcrun simctl io $SIMULATOR_ID screenshot /Users/runner/skia-test-screenshot-ios.png
          else
            echo "No booted simulator found"
          fi

      - name: Upload screenshot
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: ios-simulator-screenshot-${{ github.run_id }}
          path: /Users/runner/skia-test-screenshot-ios.png
          if-no-files-found: ignore

      - name: Print test summary
        if: always()
        run: |
          echo "================================================================"
          echo "iOS Test Summary:"
          echo "================================================================"
          echo "✓ Created Expo app with Skia template"
          echo "✓ Installed @shopify/react-native-skia@${{ inputs.skia_version }}"
          echo "✓ Installed expo-dev-client"
          echo "✓ Built and ran iOS app on ${{ inputs.simulator_device }}"
          echo "================================================================"

  test-skia-android:
    if: inputs.test_android
    runs-on: macos-latest-large
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Yarn
        run: |
          corepack enable
          yarn --version

      - name: Install Expo CLI
        run: |
          npm install -g expo-cli eas-cli
          expo --version

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Download Android system image
        run: $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "system-images;android-${{ inputs.android_api_level }};default;x86_64"

      - name: Create Android emulator
        run: |
          echo "Creating Android emulator..."
          $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test_avd --device '${{ inputs.android_device }}' --package "system-images;android-${{ inputs.android_api_level }};default;x86_64" --sdcard 512M --force

      - name: Create test directory
        run: |
          mkdir -p /Users/runner/skia-test-app
          cd /Users/runner/skia-test-app
          pwd

      - name: Create Expo app with Skia template
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 120
          command: |
            cd /Users/runner/skia-test-app
            echo "Creating Expo app with Skia template..."
            yarn create expo-app my-app -e with-skia

      - name: Download artifact package if specified
        if: startsWith(inputs.skia_version, 'artifact:')
        run: |
          ARTIFACT_ID=$(echo "${{ inputs.skia_version }}" | sed 's/artifact://')
          echo "Downloading artifact ID: $ARTIFACT_ID"
          gh run download --repo Shopify/react-native-skia $ARTIFACT_ID -n package-tgz -D /tmp
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Install React Native Skia
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          VERSION="${{ inputs.skia_version }}"
          if [ "$VERSION" == "latest" ]; then
            echo "Installing @shopify/react-native-skia@latest..."
            yarn add @shopify/react-native-skia@latest
          elif [[ "$VERSION" == artifact:* ]]; then
            echo "Installing @shopify/react-native-skia from downloaded artifact..."
            yarn add @shopify/react-native-skia@file:/tmp/package.tgz
          elif [[ "$VERSION" == http* ]]; then
            echo "Installing @shopify/react-native-skia from URL: $VERSION"
            yarn add @shopify/react-native-skia@"$VERSION"
          else
            echo "Installing @shopify/react-native-skia@$VERSION..."
            yarn add @shopify/react-native-skia@"$VERSION"
          fi

      - name: Show installed Skia version
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Installed React Native Skia version:"
          yarn list @shopify/react-native-skia --depth=0

      - name: Install TypeScript dependencies
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Installing TypeScript dependencies..."
          npx expo install typescript @types/react

      - name: Install Expo Dev Client
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Installing expo-dev-client..."
          npx expo install expo-dev-client

      - name: Prebuild native directories
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Generating native Android directory..."
          npx expo prebuild --platform android

      - name: Start Android emulator
        run: |
          echo "Starting Android emulator in background..."
          $ANDROID_HOME/emulator/emulator -memory 4096 -avd test_avd -wipe-data -no-window -gpu angle_indirect -no-snapshot -noaudio -no-boot-anim &

      - name: Wait for emulator to boot
        run: |
          echo "Waiting for Android emulator to boot..."
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
          echo "Emulator is ready"
          adb devices
        timeout-minutes: 10

      - name: Start Metro bundler
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Starting Metro bundler in background..."
          npx expo start --dev-client &
          sleep 10

      - name: Build and run Android app
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Building and running Android app on emulator..."
          npx expo run:android

      - name: Wait for app to launch
        run: |
          echo "Waiting for app to launch and stabilize..."
          sleep 120

      - name: Capture emulator screenshot
        if: always()
        run: |
          echo "Capturing screenshot from Android emulator..."
          adb exec-out screencap -p > /Users/runner/skia-test-screenshot-android.png || echo "Failed to capture screenshot"

      - name: Upload screenshot
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: android-emulator-screenshot-${{ github.run_id }}
          path: /Users/runner/skia-test-screenshot-android.png
          if-no-files-found: ignore

      - name: Print test summary
        if: always()
        run: |
          echo "================================================================"
          echo "Android Test Summary:"
          echo "================================================================"
          echo "✓ Created Expo app with Skia template"
          echo "✓ Installed @shopify/react-native-skia@${{ inputs.skia_version }}"
          echo "✓ Installed expo-dev-client"
          echo "✓ Built and ran Android app on API level ${{ inputs.android_api_level }}"
          echo "================================================================"

  test-skia-web:
    if: inputs.test_web
    runs-on: macos-latest-large
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Yarn
        run: |
          corepack enable
          yarn --version

      - name: Install Expo CLI
        run: |
          npm install -g expo-cli eas-cli
          expo --version

      - name: Create test directory
        run: |
          mkdir -p /Users/runner/skia-test-app
          cd /Users/runner/skia-test-app
          pwd

      - name: Create Expo app with Skia template
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 120
          command: |
            cd /Users/runner/skia-test-app
            echo "Creating Expo app with Skia template..."
            yarn create expo-app my-app -e with-skia

      - name: Download artifact package if specified
        if: startsWith(inputs.skia_version, 'artifact:')
        run: |
          ARTIFACT_ID=$(echo "${{ inputs.skia_version }}" | sed 's/artifact://')
          echo "Downloading artifact ID: $ARTIFACT_ID"
          gh run download --repo Shopify/react-native-skia $ARTIFACT_ID -n package-tgz -D /tmp
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Install React Native Skia
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          VERSION="${{ inputs.skia_version }}"
          if [ "$VERSION" == "latest" ]; then
            echo "Installing @shopify/react-native-skia@latest..."
            yarn add @shopify/react-native-skia@latest
          elif [[ "$VERSION" == artifact:* ]]; then
            echo "Installing @shopify/react-native-skia from downloaded artifact..."
            yarn add @shopify/react-native-skia@file:/tmp/package.tgz
          elif [[ "$VERSION" == http* ]]; then
            echo "Installing @shopify/react-native-skia from URL: $VERSION"
            yarn add @shopify/react-native-skia@"$VERSION"
          else
            echo "Installing @shopify/react-native-skia@$VERSION..."
            yarn add @shopify/react-native-skia@"$VERSION"
          fi

      - name: Show installed Skia version
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Installed React Native Skia version:"
          yarn list @shopify/react-native-skia --depth=0

      - name: Install TypeScript dependencies
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Installing TypeScript dependencies..."
          npx expo install typescript @types/react

      - name: Install Playwright dependencies
        run: |
          echo "Installing Playwright..."
          npm install -g playwright
          npx playwright install chromium
          npx playwright install-deps chromium

      - name: Start web server
        working-directory: /Users/runner/skia-test-app/my-app
        run: |
          echo "Starting web server in background..."
          npx expo start --web &
          sleep 30

      - name: Wait for web app to be ready
        run: |
          echo "Waiting for web app to be accessible..."
          timeout 60 bash -c 'until curl -s http://localhost:8081 > /dev/null; do sleep 2; done' || echo "Web server may not be fully ready"
          echo "Waiting additional time for app to fully render..."
          sleep 30

      - name: Take screenshot
        if: always()
        run: |
          echo "Taking screenshot of web app..."
          npx playwright screenshot http://localhost:8081 /Users/runner/skia-test-screenshot-web.png || echo "Failed to capture screenshot"

      - name: Upload screenshot
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: web-screenshot-${{ github.run_id }}
          path: /Users/runner/skia-test-screenshot-web.png
          if-no-files-found: ignore

      - name: Print test summary
        if: always()
        run: |
          echo "================================================================"
          echo "Web Test Summary:"
          echo "================================================================"
          echo "✓ Created Expo app with Skia template"
          echo "✓ Installed @shopify/react-native-skia@${{ inputs.skia_version }}"
          echo "✓ Started web server"
          echo "✓ Web app accessible at http://localhost:8081"
          echo "================================================================"
