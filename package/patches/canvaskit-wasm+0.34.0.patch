diff --git a/node_modules/canvaskit-wasm/package.json b/node_modules/canvaskit-wasm/package.json
index cc970b8..aac112d 100644
--- a/node_modules/canvaskit-wasm/package.json
+++ b/node_modules/canvaskit-wasm/package.json
@@ -2,7 +2,7 @@
   "name": "canvaskit-wasm",
   "version": "0.34.0",
   "description": "A WASM version of Skia's Canvas API",
-  "main": "bin/canvaskit.js",
+  "main": "bin/full/canvaskit.js",
   "homepage": "https://github.com/google/skia/tree/main/modules/canvaskit",
   "bugs": {
     "url": "https://bugs.chromium.org/p/skia/issues/entry"
diff --git a/node_modules/canvaskit-wasm/types/index.d.ts b/node_modules/canvaskit-wasm/types/index.d.ts
index 3abbcc3..30dc4e3 100644
--- a/node_modules/canvaskit-wasm/types/index.d.ts
+++ b/node_modules/canvaskit-wasm/types/index.d.ts
@@ -1,5 +1,5 @@
 // Minimum TypeScript Version: 3.7
-export function CanvasKitInit(opts: CanvasKitInitOptions): Promise<CanvasKit>;
+export default function CanvasKitInit(opts?: CanvasKitInitOptions): Promise<CanvasKit>;
 
 export interface CanvasKitInitOptions {
     /**
@@ -366,7 +366,7 @@ export interface CanvasKit {
      */
     MakeVertices(mode: VertexMode, positions: InputFlattenedPointArray,
                  textureCoordinates?: InputFlattenedPointArray | null,
-                 colors?: Float32Array | ColorIntArray | null, indices?: number[] | null,
+                 colors?: Float32Array[] | ColorIntArray[] | null, indices?: number[] | null,
                  isVolatile?: boolean): Vertices;
 
     /**
@@ -847,7 +847,7 @@ export interface Paragraph extends EmbindObject<Paragraph> {
     getMaxIntrinsicWidth(): number;
     getMaxWidth(): number;
     getMinIntrinsicWidth(): number;
-    getRectsForPlaceholders(): FlattenedRectangleArray;
+    getRectsForPlaceholders(): FlattenedRectangleArray[];
 
     /**
      * Returns bounding boxes that enclose all text in the range of glpyh indexes [start, end).
@@ -857,7 +857,7 @@ export interface Paragraph extends EmbindObject<Paragraph> {
      * @param wStyle
      */
     getRectsForRange(start: number, end: number, hStyle: RectHeightStyle,
-                     wStyle: RectWidthStyle): FlattenedRectangleArray;
+                     wStyle: RectWidthStyle): FlattenedRectangleArray[];
 
     /**
      * Finds the first and last glyphs that define a word containing the glyph at index offset.
@@ -1983,7 +1983,7 @@ export interface Paint extends EmbindObject<Paint> {
      * Sets the current color filter, replacing the existing one if there was one.
      * @param filter
      */
-    setColorFilter(filter: ColorFilter): void;
+    setColorFilter(filter: ColorFilter | null): void;
 
     /**
      * Sets the color used when stroking and filling. The color values are interpreted as being in
@@ -1997,25 +1997,25 @@ export interface Paint extends EmbindObject<Paint> {
      * Sets the current image filter, replacing the existing one if there was one.
      * @param filter
      */
-    setImageFilter(filter: ImageFilter): void;
+    setImageFilter(filter: ImageFilter | null): void;
 
     /**
      * Sets the current mask filter, replacing the existing one if there was one.
      * @param filter
      */
-    setMaskFilter(filter: MaskFilter): void;
+    setMaskFilter(filter: MaskFilter | null): void;
 
     /**
      * Sets the current path effect, replacing the existing one if there was one.
      * @param effect
      */
-    setPathEffect(effect: PathEffect): void;
+    setPathEffect(effect: PathEffect | null): void;
 
     /**
      * Sets the current shader, replacing the existing one if there was one.
      * @param shader
      */
-    setShader(shader: Shader): void;
+    setShader(shader: Shader | null): void;
 
     /**
      * Sets the geometry drawn at the beginning and end of strokes.
@@ -3440,7 +3440,7 @@ export interface ShaderFactory {
      * @param color
      * @param space
      */
-    MakeColor(color: InputColor, space: ColorSpace): Shader;
+    MakeColor(color: InputColor, space?: ColorSpace): Shader;
 
     /**
      * Returns a shader with Perlin Fractal Noise.
