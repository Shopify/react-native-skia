{"version":3,"names":[],"sources":["Animations.ts"],"sourcesContent":["export type AnimatedProp<T> = T | { value: T };\n\nexport type AnimatedProps<T, O extends keyof T | never = never> = {\n  [K in keyof T]: K extends \"children\"\n    ? T[K]\n    : K extends O\n    ? T[K]\n    : AnimatedProp<T[K]>;\n};\n\nexport type SkiaProps<\n  P = object,\n  O extends keyof P | never = never\n> = AnimatedProps<P, O>;\n\ntype WithOptional<T extends object, N extends keyof T> = Omit<T, N> & {\n  [K in N]?: T[K];\n};\n\nexport type SkiaDefaultProps<\n  T extends object,\n  N extends keyof T\n> = WithOptional<SkiaProps<T>, N>;\n"],"mappings":"","ignoreList":[]}