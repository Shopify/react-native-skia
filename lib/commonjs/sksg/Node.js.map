{"version":3,"names":["_types","require","isColorFilter","type","NodeType","BlendColorFilter","MatrixColorFilter","LerpColorFilter","LumaColorFilter","SRGBToLinearGammaColorFilter","LinearToSRGBGammaColorFilter","exports","isPathEffect","DiscretePathEffect","DashPathEffect","Path1DPathEffect","Path2DPathEffect","CornerPathEffect","SumPathEffect","Line2DPathEffect","isImageFilter","OffsetImageFilter","DisplacementMapImageFilter","BlurImageFilter","DropShadowImageFilter","MorphologyImageFilter","BlendImageFilter","RuntimeShaderImageFilter","isShader","Shader","ImageShader","ColorShader","Turbulence","FractalNoise","LinearGradient","RadialGradient","SweepGradient","TwoPointConicalGradient","sortNodeChildren","parent","maskFilters","colorFilters","shaders","imageFilters","pathEffects","drawings","paints","children","forEach","node","push","BlurMaskFilter","Paint","Blend"],"sources":["Node.ts"],"sourcesContent":["import { NodeType } from \"../dom/types\";\n\nexport interface Node<Props = unknown> {\n  type: NodeType;\n  props: Props;\n  children: Node[];\n}\n\nexport const isColorFilter = (type: NodeType) => {\n  \"worklet\";\n  return (\n    type === NodeType.BlendColorFilter ||\n    type === NodeType.MatrixColorFilter ||\n    type === NodeType.LerpColorFilter ||\n    type === NodeType.LumaColorFilter ||\n    type === NodeType.SRGBToLinearGammaColorFilter ||\n    type === NodeType.LinearToSRGBGammaColorFilter\n  );\n};\n\nexport const isPathEffect = (type: NodeType) => {\n  \"worklet\";\n  return (\n    type === NodeType.DiscretePathEffect ||\n    type === NodeType.DashPathEffect ||\n    type === NodeType.Path1DPathEffect ||\n    type === NodeType.Path2DPathEffect ||\n    type === NodeType.CornerPathEffect ||\n    type === NodeType.SumPathEffect ||\n    type === NodeType.Line2DPathEffect\n  );\n};\n\nexport const isImageFilter = (type: NodeType) => {\n  \"worklet\";\n  return (\n    type === NodeType.OffsetImageFilter ||\n    type === NodeType.DisplacementMapImageFilter ||\n    type === NodeType.BlurImageFilter ||\n    type === NodeType.DropShadowImageFilter ||\n    type === NodeType.MorphologyImageFilter ||\n    type === NodeType.BlendImageFilter ||\n    type === NodeType.RuntimeShaderImageFilter\n  );\n};\n\nexport const isShader = (type: NodeType) => {\n  \"worklet\";\n  return (\n    type === NodeType.Shader ||\n    type === NodeType.ImageShader ||\n    type === NodeType.ColorShader ||\n    type === NodeType.Turbulence ||\n    type === NodeType.FractalNoise ||\n    type === NodeType.LinearGradient ||\n    type === NodeType.RadialGradient ||\n    type === NodeType.SweepGradient ||\n    type === NodeType.TwoPointConicalGradient\n  );\n};\n\nexport const sortNodeChildren = (parent: Node) => {\n  \"worklet\";\n  const maskFilters: Node[] = [];\n  const colorFilters: Node[] = [];\n  const shaders: Node[] = [];\n  const imageFilters: Node[] = [];\n  const pathEffects: Node[] = [];\n  const drawings: Node[] = [];\n  const paints: Node[] = [];\n  parent.children.forEach((node) => {\n    if (isColorFilter(node.type)) {\n      colorFilters.push(node);\n    } else if (node.type === NodeType.BlurMaskFilter) {\n      maskFilters.push(node);\n    } else if (isPathEffect(node.type)) {\n      pathEffects.push(node);\n    } else if (isImageFilter(node.type)) {\n      imageFilters.push(node);\n    } else if (isShader(node.type)) {\n      shaders.push(node);\n    } else if (node.type === NodeType.Paint) {\n      paints.push(node);\n    } else if (node.type === NodeType.Blend) {\n      if (node.children[0] && isImageFilter(node.children[0].type)) {\n        node.type = NodeType.BlendImageFilter;\n        imageFilters.push(node);\n      } else {\n        node.type = NodeType.Blend;\n        shaders.push(node);\n      }\n    } else {\n      drawings.push(node);\n    }\n  });\n  return {\n    colorFilters,\n    drawings,\n    maskFilters,\n    shaders,\n    pathEffects,\n    imageFilters,\n    paints,\n  };\n};\n"],"mappings":"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","ignoreList":[]}