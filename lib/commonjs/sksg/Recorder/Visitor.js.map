{"version":3,"names":["_types","require","_Node","processPaint","opacity","color","strokeWidth","blendMode","style","strokeJoin","strokeCap","strokeMiter","antiAlias","dither","paint","paintRef","undefined","exports","processCTM","clip","invertClip","transform","origin","matrix","layer","ctm","pushColorFilters","recorder","colorFilters","forEach","colorFilter","children","length","pushColorFilter","type","props","needsComposition","NodeType","LerpColorFilter","composeColorFilter","pushPathEffects","pathEffects","pathEffect","pushPathEffect","SumPathEffect","composePathEffect","pushImageFilters","imageFilters","imageFilter","isImageFilter","pushImageFilter","isShader","pushShader","BlendImageFilter","composeImageFilter","pushShaders","shaders","shader","pushMaskFilters","maskFilters","pushBlurMaskFilter","pushPaints","paints","savePaint","sortNodeChildren","restorePaintDeclaration","visitNode","node","Group","saveGroup","drawings","shouldPushPaint","BackdropFilter","saveBackdropFilter","materializePaint","Layer","saveLayer","shouldRestore","saveCTM","Box","shadows","filter","n","BoxShadow","map","drawBox","Fill","drawPaint","Image","drawImage","Circle","drawCircle","Points","drawPoints","Path","drawPath","Rect","drawRect","RRect","drawRRect","Oval","drawOval","Line","drawLine","Patch","drawPatch","Vertices","drawVertices","DiffRect","drawDiffRect","Text","drawText","TextPath","drawTextPath","TextBlob","drawTextBlob","Glyphs","drawGlyphs","Picture","drawPicture","ImageSVG","drawImageSVG","Paragraph","drawParagraph","Atlas","drawAtlas","drawing","restorePaint","restoreCTM","restoreGroup","visit","root"],"sources":["Visitor.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type {\n  CTMProps,\n  DrawingNodeProps,\n  BoxShadowProps,\n} from \"../../dom/types\";\nimport { NodeType } from \"../../dom/types\";\nimport type { BaseRecorder } from \"../../skia/types/Recorder\";\nimport type { Node } from \"../Node\";\nimport { isImageFilter, isShader, sortNodeChildren } from \"../Node\";\n\nexport const processPaint = ({\n  opacity,\n  color,\n  strokeWidth,\n  blendMode,\n  style,\n  strokeJoin,\n  strokeCap,\n  strokeMiter,\n  antiAlias,\n  dither,\n  paint: paintRef,\n}: DrawingNodeProps) => {\n  const paint: DrawingNodeProps = {};\n  if (opacity !== undefined) {\n    paint.opacity = opacity;\n  }\n  if (color !== undefined) {\n    paint.color = color;\n  }\n  if (strokeWidth !== undefined) {\n    paint.strokeWidth = strokeWidth;\n  }\n  if (blendMode !== undefined) {\n    paint.blendMode = blendMode;\n  }\n  if (style !== undefined) {\n    paint.style = style;\n  }\n  if (strokeJoin !== undefined) {\n    paint.strokeJoin = strokeJoin;\n  }\n  if (strokeCap !== undefined) {\n    paint.strokeCap = strokeCap;\n  }\n  if (strokeMiter !== undefined) {\n    paint.strokeMiter = strokeMiter;\n  }\n  if (antiAlias !== undefined) {\n    paint.antiAlias = antiAlias;\n  }\n  if (dither !== undefined) {\n    paint.dither = dither;\n  }\n\n  if (paintRef !== undefined) {\n    paint.paint = paintRef;\n  }\n\n  if (\n    opacity !== undefined ||\n    color !== undefined ||\n    strokeWidth !== undefined ||\n    blendMode !== undefined ||\n    style !== undefined ||\n    strokeJoin !== undefined ||\n    strokeCap !== undefined ||\n    strokeMiter !== undefined ||\n    antiAlias !== undefined ||\n    dither !== undefined ||\n    paintRef !== undefined\n  ) {\n    return paint;\n  }\n  return null;\n};\n\nconst processCTM = ({\n  clip,\n  invertClip,\n  transform,\n  origin,\n  matrix,\n  layer,\n}: CTMProps) => {\n  const ctm: CTMProps = {};\n  if (clip) {\n    ctm.clip = clip;\n  }\n  if (invertClip) {\n    ctm.invertClip = invertClip;\n  }\n  if (transform) {\n    ctm.transform = transform;\n  }\n  if (origin) {\n    ctm.origin = origin;\n  }\n  if (matrix) {\n    ctm.matrix = matrix;\n  }\n  if (layer) {\n    ctm.layer = layer;\n  }\n  if (\n    clip !== undefined ||\n    invertClip !== undefined ||\n    transform !== undefined ||\n    origin !== undefined ||\n    matrix !== undefined ||\n    layer !== undefined\n  ) {\n    return ctm;\n  }\n  return null;\n};\n\nconst pushColorFilters = (\n  recorder: BaseRecorder,\n  colorFilters: Node<any>[]\n) => {\n  colorFilters.forEach((colorFilter) => {\n    if (colorFilter.children.length > 0) {\n      pushColorFilters(recorder, colorFilter.children);\n    }\n    recorder.pushColorFilter(colorFilter.type, colorFilter.props);\n    const needsComposition =\n      colorFilter.type !== NodeType.LerpColorFilter &&\n      colorFilter.children.length > 0;\n    if (needsComposition) {\n      recorder.composeColorFilter();\n    }\n  });\n};\n\nconst pushPathEffects = (recorder: BaseRecorder, pathEffects: Node<any>[]) => {\n  pathEffects.forEach((pathEffect) => {\n    if (pathEffect.children.length > 0) {\n      pushPathEffects(recorder, pathEffect.children);\n    }\n    recorder.pushPathEffect(pathEffect.type, pathEffect.props);\n    const needsComposition =\n      pathEffect.type !== NodeType.SumPathEffect &&\n      pathEffect.children.length > 0;\n    if (needsComposition) {\n      recorder.composePathEffect();\n    }\n  });\n};\n\nconst pushImageFilters = (\n  recorder: BaseRecorder,\n  imageFilters: Node<any>[]\n) => {\n  imageFilters.forEach((imageFilter) => {\n    if (imageFilter.children.length > 0) {\n      pushImageFilters(recorder, imageFilter.children);\n    }\n    if (isImageFilter(imageFilter.type)) {\n      recorder.pushImageFilter(imageFilter.type, imageFilter.props);\n    } else if (isShader(imageFilter.type)) {\n      recorder.pushShader(imageFilter.type, imageFilter.props);\n    }\n    const needsComposition =\n      imageFilter.type !== NodeType.BlendImageFilter &&\n      imageFilter.children.length > 0;\n    if (needsComposition) {\n      recorder.composeImageFilter();\n    }\n  });\n};\n\nconst pushShaders = (recorder: BaseRecorder, shaders: Node<any>[]) => {\n  shaders.forEach((shader) => {\n    if (shader.children.length > 0) {\n      pushShaders(recorder, shader.children);\n    }\n    recorder.pushShader(shader.type, shader.props);\n  });\n};\n\nconst pushMaskFilters = (recorder: BaseRecorder, maskFilters: Node<any>[]) => {\n  if (maskFilters.length > 0) {\n    recorder.pushBlurMaskFilter(maskFilters[maskFilters.length - 1].props);\n  }\n};\n\nconst pushPaints = (recorder: BaseRecorder, paints: Node<any>[]) => {\n  paints.forEach((paint) => {\n    recorder.savePaint(paint.props);\n    const { colorFilters, maskFilters, shaders, imageFilters, pathEffects } =\n      sortNodeChildren(paint);\n    pushColorFilters(recorder, colorFilters);\n    pushImageFilters(recorder, imageFilters);\n    pushMaskFilters(recorder, maskFilters);\n    pushShaders(recorder, shaders);\n    pushPathEffects(recorder, pathEffects);\n    recorder.restorePaintDeclaration();\n  });\n};\n\nconst visitNode = (recorder: BaseRecorder, node: Node<any>) => {\n  if (node.type === NodeType.Group) {\n    recorder.saveGroup();\n  }\n  const { props } = node;\n  const {\n    colorFilters,\n    maskFilters,\n    drawings,\n    shaders,\n    imageFilters,\n    pathEffects,\n    paints,\n  } = sortNodeChildren(node);\n  const paint = processPaint(props);\n  const shouldPushPaint =\n    paint ||\n    colorFilters.length > 0 ||\n    maskFilters.length > 0 ||\n    imageFilters.length > 0 ||\n    pathEffects.length > 0 ||\n    shaders.length > 0;\n  if (shouldPushPaint) {\n    recorder.savePaint(paint ?? {});\n    pushColorFilters(recorder, colorFilters);\n    pushImageFilters(recorder, imageFilters);\n    pushMaskFilters(recorder, maskFilters);\n    pushShaders(recorder, shaders);\n    pushPathEffects(recorder, pathEffects);\n    // For mixed nodes like BackdropFilters we don't materialize the paint\n    if (node.type === NodeType.BackdropFilter) {\n      recorder.saveBackdropFilter();\n    } else {\n      recorder.materializePaint();\n    }\n  }\n  pushPaints(recorder, paints);\n  if (node.type === NodeType.Layer) {\n    recorder.saveLayer();\n  }\n  const ctm = processCTM(props);\n  const shouldRestore = !!ctm || node.type === NodeType.Layer;\n  if (ctm) {\n    recorder.saveCTM(ctm);\n  }\n  switch (node.type) {\n    case NodeType.Box:\n      const shadows = node.children\n        .filter((n) => n.type === NodeType.BoxShadow)\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        .map(({ props }) => ({ props } as { props: BoxShadowProps }));\n      recorder.drawBox(props, shadows);\n      break;\n    case NodeType.Fill:\n      recorder.drawPaint();\n      break;\n    case NodeType.Image:\n      recorder.drawImage(props);\n      break;\n    case NodeType.Circle:\n      recorder.drawCircle(props);\n      break;\n    case NodeType.Points:\n      recorder.drawPoints(props);\n      break;\n    case NodeType.Path:\n      recorder.drawPath(props);\n      break;\n    case NodeType.Rect:\n      recorder.drawRect(props);\n      break;\n    case NodeType.RRect:\n      recorder.drawRRect(props);\n      break;\n    case NodeType.Oval:\n      recorder.drawOval(props);\n      break;\n    case NodeType.Line:\n      recorder.drawLine(props);\n      break;\n    case NodeType.Patch:\n      recorder.drawPatch(props);\n      break;\n    case NodeType.Vertices:\n      recorder.drawVertices(props);\n      break;\n    case NodeType.DiffRect:\n      recorder.drawDiffRect(props);\n      break;\n    case NodeType.Text:\n      recorder.drawText(props);\n      break;\n    case NodeType.TextPath:\n      recorder.drawTextPath(props);\n      break;\n    case NodeType.TextBlob:\n      recorder.drawTextBlob(props);\n      break;\n    case NodeType.Glyphs:\n      recorder.drawGlyphs(props);\n      break;\n    case NodeType.Picture:\n      recorder.drawPicture(props);\n      break;\n    case NodeType.ImageSVG:\n      recorder.drawImageSVG(props);\n      break;\n    case NodeType.Paragraph:\n      recorder.drawParagraph(props);\n      break;\n    case NodeType.Atlas:\n      recorder.drawAtlas(props);\n      break;\n  }\n  drawings.forEach((drawing) => {\n    visitNode(recorder, drawing);\n  });\n  if (shouldPushPaint) {\n    recorder.restorePaint();\n  }\n  if (shouldRestore) {\n    recorder.restoreCTM();\n  }\n  if (node.type === NodeType.Group) {\n    recorder.restoreGroup();\n  }\n};\n\nexport const visit = (recorder: BaseRecorder, root: Node[]) => {\n  root.forEach((node) => {\n    visitNode(recorder, node);\n  });\n};\n"],"mappings":"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","ignoreList":[]}