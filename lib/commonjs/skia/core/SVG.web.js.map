{"version":3,"names":["_Skia","require","useSVG","source","onError","undefined","Error","Uint8Array","default","JSON","stringify","svg","Skia","SVG","MakeFromString","exports"],"sources":["SVG.web.ts"],"sourcesContent":["import { Skia } from \"../Skia\";\nimport type { DataSourceParam } from \"../types\";\n\nexport const useSVG = (\n  source: DataSourceParam,\n  onError?: (err: Error) => void\n) => {\n  if (source === null || source === undefined) {\n    throw new Error(`Invalid svg data source. Got: ${source}`);\n  }\n  if (\n    typeof source !== \"object\" ||\n    source instanceof Uint8Array ||\n    typeof source.default !== \"string\"\n  ) {\n    throw new Error(\n      `Invalid svg data source. Make sure that the source resolves to a string. Got: ${JSON.stringify(\n        source,\n        null,\n        2\n      )}`\n    );\n  }\n  const svg = Skia.SVG.MakeFromString(source.default);\n  if (svg === null && onError !== undefined) {\n    onError(new Error(\"Failed to create SVG from source.\"));\n  }\n  return svg;\n};\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AAGO,MAAMC,MAAM,GAAGA,CACpBC,MAAuB,EACvBC,OAA8B,KAC3B;EACH,IAAID,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAKE,SAAS,EAAE;IAC3C,MAAM,IAAIC,KAAK,CAAC,iCAAiCH,MAAM,EAAE,CAAC;EAC5D;EACA,IACE,OAAOA,MAAM,KAAK,QAAQ,IAC1BA,MAAM,YAAYI,UAAU,IAC5B,OAAOJ,MAAM,CAACK,OAAO,KAAK,QAAQ,EAClC;IACA,MAAM,IAAIF,KAAK,CACb,iFAAiFG,IAAI,CAACC,SAAS,CAC7FP,MAAM,EACN,IAAI,EACJ,CACF,CAAC,EACH,CAAC;EACH;EACA,MAAMQ,GAAG,GAAGC,UAAI,CAACC,GAAG,CAACC,cAAc,CAACX,MAAM,CAACK,OAAO,CAAC;EACnD,IAAIG,GAAG,KAAK,IAAI,IAAIP,OAAO,KAAKC,SAAS,EAAE;IACzCD,OAAO,CAAC,IAAIE,KAAK,CAAC,mCAAmC,CAAC,CAAC;EACzD;EACA,OAAOK,GAAG;AACZ,CAAC;AAACI,OAAA,CAAAb,MAAA,GAAAA,MAAA","ignoreList":[]}