{"version":3,"names":["_Skia","require","_Data","tfFactory","Skia","Typeface","MakeFreeTypeFaceFromData","bind","useTypeface","source","onError","useRawData","exports"],"sources":["Typeface.ts"],"sourcesContent":["import { Skia } from \"../Skia\";\nimport type { DataSourceParam } from \"../types\";\n\nimport { useRawData } from \"./Data\";\n\nconst tfFactory = Skia.Typeface.MakeFreeTypeFaceFromData.bind(Skia.Typeface);\n\n/**\n * Returns a Skia Typeface object\n * */\nexport const useTypeface = (\n  source: DataSourceParam,\n  onError?: (err: Error) => void\n) => useRawData(source, tfFactory, onError);\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AAGA,IAAAC,KAAA,GAAAD,OAAA;AAEA,MAAME,SAAS,GAAGC,UAAI,CAACC,QAAQ,CAACC,wBAAwB,CAACC,IAAI,CAACH,UAAI,CAACC,QAAQ,CAAC;;AAE5E;AACA;AACA;AACO,MAAMG,WAAW,GAAGA,CACzBC,MAAuB,EACvBC,OAA8B,KAC3B,IAAAC,gBAAU,EAACF,MAAM,EAAEN,SAAS,EAAEO,OAAO,CAAC;AAACE,OAAA,CAAAJ,WAAA,GAAAA,WAAA","ignoreList":[]}