{"version":3,"names":["_Skia","require","_types","createPicture","cb","rect","recorder","Skia","PictureRecorder","bounds","isRect","XYWHRect","width","height","canvas","beginRecording","finishRecordingAsPicture","exports"],"sources":["Picture.ts"],"sourcesContent":["import { Skia } from \"../Skia\";\nimport type { SkCanvas, SkRect, SkSize } from \"../types\";\nimport { isRect } from \"../types\";\n\n/**\n * Memoizes and returns an SkPicture that can be drawn to another canvas.\n * @param rect Picture bounds\n * @param cb Callback for drawing to the canvas\n * @returns SkPicture\n */\nexport const createPicture = (\n  cb: (canvas: SkCanvas) => void,\n  rect?: SkRect | SkSize\n) => {\n  \"worklet\";\n  const recorder = Skia.PictureRecorder();\n  let bounds: undefined | SkRect;\n  if (rect) {\n    bounds = isRect(rect) ? rect : Skia.XYWHRect(0, 0, rect.width, rect.height);\n  }\n  const canvas = recorder.beginRecording(bounds);\n  cb(canvas);\n  return recorder.finishRecordingAsPicture();\n};\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAD,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,MAAME,aAAa,GAAGA,CAC3BC,EAA8B,EAC9BC,IAAsB,KACnB;EACH,SAAS;;EACT,MAAMC,QAAQ,GAAGC,UAAI,CAACC,eAAe,CAAC,CAAC;EACvC,IAAIC,MAA0B;EAC9B,IAAIJ,IAAI,EAAE;IACRI,MAAM,GAAG,IAAAC,aAAM,EAACL,IAAI,CAAC,GAAGA,IAAI,GAAGE,UAAI,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEN,IAAI,CAACO,KAAK,EAAEP,IAAI,CAACQ,MAAM,CAAC;EAC7E;EACA,MAAMC,MAAM,GAAGR,QAAQ,CAACS,cAAc,CAACN,MAAM,CAAC;EAC9CL,EAAE,CAACU,MAAM,CAAC;EACV,OAAOR,QAAQ,CAACU,wBAAwB,CAAC,CAAC;AAC5C,CAAC;AAACC,OAAA,CAAAd,aAAA,GAAAA,aAAA","ignoreList":[]}