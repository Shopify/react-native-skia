{"version":3,"names":["_Host","require","_JsiSkFont","_JsiSkTextBlob","_JsiSkRSXform","JsiSkTextBlobFactory","Host","constructor","CanvasKit","MakeFromText","str","font","JsiSkTextBlob","TextBlob","JsiSkFont","fromValue","MakeFromGlyphs","glyphs","MakeFromRSXform","rsxforms","map","f","Array","from","JsiSkRSXform","flat","MakeFromRSXformGlyphs","transforms","flatMap","s","exports"],"sources":["JsiSkTextBlobFactory.ts"],"sourcesContent":["import type { CanvasKit } from \"canvaskit-wasm\";\n\nimport type { SkFont } from \"../types\";\nimport type { TextBlobFactory } from \"../types/TextBlob\";\nimport type { SkRSXform } from \"../types/RSXform\";\n\nimport { Host } from \"./Host\";\nimport { JsiSkFont } from \"./JsiSkFont\";\nimport { JsiSkTextBlob } from \"./JsiSkTextBlob\";\nimport { JsiSkRSXform } from \"./JsiSkRSXform\";\n\nexport class JsiSkTextBlobFactory extends Host implements TextBlobFactory {\n  constructor(CanvasKit: CanvasKit) {\n    super(CanvasKit);\n  }\n\n  MakeFromText(str: string, font: SkFont) {\n    return new JsiSkTextBlob(\n      this.CanvasKit,\n      this.CanvasKit.TextBlob.MakeFromText(str, JsiSkFont.fromValue(font))\n    );\n  }\n\n  MakeFromGlyphs(glyphs: number[], font: SkFont) {\n    return new JsiSkTextBlob(\n      this.CanvasKit,\n      this.CanvasKit.TextBlob.MakeFromGlyphs(glyphs, JsiSkFont.fromValue(font))\n    );\n  }\n\n  MakeFromRSXform(str: string, rsxforms: SkRSXform[], font: SkFont) {\n    return new JsiSkTextBlob(\n      this.CanvasKit,\n      this.CanvasKit.TextBlob.MakeFromRSXform(\n        str,\n        rsxforms.map((f) => Array.from(JsiSkRSXform.fromValue(f))).flat(),\n        JsiSkFont.fromValue(font)\n      )\n    );\n  }\n\n  MakeFromRSXformGlyphs(glyphs: number[], rsxforms: SkRSXform[], font: SkFont) {\n    const transforms = rsxforms.flatMap((s) =>\n      Array.from(JsiSkRSXform.fromValue(s))\n    );\n    return new JsiSkTextBlob(\n      this.CanvasKit,\n      this.CanvasKit.TextBlob.MakeFromRSXformGlyphs(\n        glyphs,\n        transforms,\n        JsiSkFont.fromValue(font)\n      )\n    );\n  }\n}\n"],"mappings":";;;;;;AAMA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAF,OAAA;AACA,IAAAG,aAAA,GAAAH,OAAA;AAEO,MAAMI,oBAAoB,SAASC,UAAI,CAA4B;EACxEC,WAAWA,CAACC,SAAoB,EAAE;IAChC,KAAK,CAACA,SAAS,CAAC;EAClB;EAEAC,YAAYA,CAACC,GAAW,EAAEC,IAAY,EAAE;IACtC,OAAO,IAAIC,4BAAa,CACtB,IAAI,CAACJ,SAAS,EACd,IAAI,CAACA,SAAS,CAACK,QAAQ,CAACJ,YAAY,CAACC,GAAG,EAAEI,oBAAS,CAACC,SAAS,CAACJ,IAAI,CAAC,CACrE,CAAC;EACH;EAEAK,cAAcA,CAACC,MAAgB,EAAEN,IAAY,EAAE;IAC7C,OAAO,IAAIC,4BAAa,CACtB,IAAI,CAACJ,SAAS,EACd,IAAI,CAACA,SAAS,CAACK,QAAQ,CAACG,cAAc,CAACC,MAAM,EAAEH,oBAAS,CAACC,SAAS,CAACJ,IAAI,CAAC,CAC1E,CAAC;EACH;EAEAO,eAAeA,CAACR,GAAW,EAAES,QAAqB,EAAER,IAAY,EAAE;IAChE,OAAO,IAAIC,4BAAa,CACtB,IAAI,CAACJ,SAAS,EACd,IAAI,CAACA,SAAS,CAACK,QAAQ,CAACK,eAAe,CACrCR,GAAG,EACHS,QAAQ,CAACC,GAAG,CAAEC,CAAC,IAAKC,KAAK,CAACC,IAAI,CAACC,0BAAY,CAACT,SAAS,CAACM,CAAC,CAAC,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,EACjEX,oBAAS,CAACC,SAAS,CAACJ,IAAI,CAC1B,CACF,CAAC;EACH;EAEAe,qBAAqBA,CAACT,MAAgB,EAAEE,QAAqB,EAAER,IAAY,EAAE;IAC3E,MAAMgB,UAAU,GAAGR,QAAQ,CAACS,OAAO,CAAEC,CAAC,IACpCP,KAAK,CAACC,IAAI,CAACC,0BAAY,CAACT,SAAS,CAACc,CAAC,CAAC,CACtC,CAAC;IACD,OAAO,IAAIjB,4BAAa,CACtB,IAAI,CAACJ,SAAS,EACd,IAAI,CAACA,SAAS,CAACK,QAAQ,CAACa,qBAAqB,CAC3CT,MAAM,EACNU,UAAU,EACVb,oBAAS,CAACC,SAAS,CAACJ,IAAI,CAC1B,CACF,CAAC;EACH;AACF;AAACmB,OAAA,CAAAzB,oBAAA,GAAAA,oBAAA","ignoreList":[]}