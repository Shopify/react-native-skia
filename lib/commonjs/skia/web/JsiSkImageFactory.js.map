{"version":3,"names":["_types","require","_Host","_JsiSkImage","_JsiSkData","JsiSkImageFactory","Host","constructor","CanvasKit","MakeImageFromViewTag","viewTag","view","console","log","Promise","resolve","MakeImageFromNativeBuffer","buffer","surface","image","isNativeBufferWeb","Error","img","HTMLImageElement","HTMLVideoElement","ImageBitmap","MakeLazyImageFromTextureSource","CanvasKitWebGLBuffer","toImage","MakeImageFromCanvasImageSource","JsiSkImage","makeImageFromTextureSource","updateTextureFromSource","MakeImageFromEncoded","encoded","JsiSkData","fromValue","MakeImageFromNativeTextureUnstable","throwNotImplementedOnRNWeb","MakeImage","info","data","bytesPerRow","alphaType","getEnum","colorSpace","ColorSpace","SRGB","colorType","height","width","exports"],"sources":["JsiSkImageFactory.ts"],"sourcesContent":["import type { CanvasKit, Image } from \"canvaskit-wasm\";\n\nimport { CanvasKitWebGLBuffer, isNativeBufferWeb } from \"../types\";\nimport type {\n  SkData,\n  ImageInfo,\n  SkImage,\n  NativeBuffer,\n  ImageFactory,\n} from \"../types\";\n\nimport { Host, getEnum, throwNotImplementedOnRNWeb } from \"./Host\";\nimport { JsiSkImage } from \"./JsiSkImage\";\nimport { JsiSkData } from \"./JsiSkData\";\nimport type { JsiSkSurface } from \"./JsiSkSurface\";\nimport type { CanvasKitWebGLBufferImpl } from \"./CanvasKitWebGLBufferImpl\";\n\nexport class JsiSkImageFactory extends Host implements ImageFactory {\n  constructor(CanvasKit: CanvasKit) {\n    super(CanvasKit);\n  }\n\n  MakeImageFromViewTag(viewTag: number): Promise<SkImage | null> {\n    const view = viewTag as unknown as HTMLElement;\n    // TODO: Implement screenshot from view in React JS\n    console.log(view);\n    return Promise.resolve(null);\n  }\n\n  MakeImageFromNativeBuffer(\n    buffer: NativeBuffer,\n    surface?: JsiSkSurface,\n    image?: JsiSkImage\n  ) {\n    if (!isNativeBufferWeb(buffer)) {\n      throw new Error(\"Invalid NativeBuffer\");\n    }\n    if (!surface) {\n      let img: Image;\n      if (\n        buffer instanceof HTMLImageElement ||\n        buffer instanceof HTMLVideoElement ||\n        buffer instanceof ImageBitmap\n      ) {\n        img = this.CanvasKit.MakeLazyImageFromTextureSource(buffer);\n      } else if (buffer instanceof CanvasKitWebGLBuffer) {\n        img = (\n          buffer as CanvasKitWebGLBuffer as CanvasKitWebGLBufferImpl\n        ).toImage();\n      } else {\n        img = this.CanvasKit.MakeImageFromCanvasImageSource(buffer);\n      }\n      return new JsiSkImage(this.CanvasKit, img);\n    } else if (!image) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const img = (surface as any).makeImageFromTextureSource(buffer) as Image;\n      return new JsiSkImage(this.CanvasKit, img);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const img = (surface as any).updateTextureFromSource(\n        image,\n        buffer\n      ) as Image;\n      return new JsiSkImage(this.CanvasKit, img);\n    }\n  }\n\n  MakeImageFromEncoded(encoded: SkData) {\n    const image = this.CanvasKit.MakeImageFromEncoded(\n      JsiSkData.fromValue(encoded)\n    );\n    if (image === null) {\n      return null;\n    }\n    return new JsiSkImage(this.CanvasKit, image);\n  }\n\n  MakeImageFromNativeTextureUnstable() {\n    return throwNotImplementedOnRNWeb<SkImage>();\n  }\n\n  MakeImage(info: ImageInfo, data: SkData, bytesPerRow: number) {\n    // see toSkImageInfo() from canvaskit\n    const image = this.CanvasKit.MakeImage(\n      {\n        alphaType: getEnum(this.CanvasKit, \"AlphaType\", info.alphaType),\n        colorSpace: this.CanvasKit.ColorSpace.SRGB,\n        colorType: getEnum(this.CanvasKit, \"ColorType\", info.colorType),\n        height: info.height,\n        width: info.width,\n      },\n      JsiSkData.fromValue(data),\n      bytesPerRow\n    );\n    if (image === null) {\n      return null;\n    }\n    return new JsiSkImage(this.CanvasKit, image);\n  }\n}\n"],"mappings":"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","ignoreList":[]}