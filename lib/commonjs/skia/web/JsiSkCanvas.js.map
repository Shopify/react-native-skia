{"version":3,"names":["_types","require","_Host","_JsiSkPaint","_JsiSkRect","_JsiSkRRect","_JsiSkImage","_JsiSkVertices","_JsiSkPath","_JsiSkFont","_JsiSkTextBlob","_JsiSkPicture","_JsiSkMatrix","_JsiSkImageFilter","_JsiSkPoint","_JsiSkRSXform","_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","JsiSkCanvas","HostObject","constructor","CanvasKit","ref","delete","drawRect","rect","paint","JsiSkRect","fromValue","JsiSkPaint","drawImage","image","x","y","JsiSkImage","drawImageRect","img","src","dest","fastSample","drawImageCubic","left","top","B","C","drawImageOptions","fm","mm","getEnum","drawImageNine","center","filter","Array","from","drawImageRectCubic","drawImageRectOptions","drawPaint","drawLine","x0","y0","x1","y1","drawCircle","cx","cy","radius","drawVertices","verts","mode","JsiSkVertices","drawPatch","cubics","colors","texs","map","flat","flatMap","p","JsiSkPoint","undefined","restoreToCount","saveCount","drawPoints","points","drawArc","oval","startAngle","sweepAngle","useCenter","drawRRect","rrect","JsiSkRRect","drawDRRect","outer","inner","drawOval","drawPath","path","JsiSkPath","drawText","str","font","JsiSkFont","drawTextBlob","blob","JsiSkTextBlob","drawGlyphs","glyphs","positions","drawSvg","svg","_width","_height","MakeImageFromCanvasImageSource","save","saveLayer","bounds","backdrop","flags","JsiSkImageFilter","restore","rotate","rotationInDegrees","rx","ry","scale","sx","sy","skew","translate","dx","dy","drawColor","color","blendMode","clear","clipPath","op","doAntiAlias","clipRect","clipRRect","concat","m","isArray","JsiSkMatrix","drawPicture","skp","JsiSkPicture","drawAtlas","atlas","srcs","dsts","sampling","s","dst","JsiSkRSXform","cls","Uint32Array","length","g","b","a","ColorAsInt","ckSampling","FilterMode","Linear","mipmap","MipmapMode","None","isCubicSampling","BlendMode","DstOver","readPixels","srcX","srcY","imageInfo","pxInfo","width","height","colorSpace","ColorSpace","SRGB","alphaType","colorType","exports"],"sources":["JsiSkCanvas.ts"],"sourcesContent":["import type {\n  Canvas,\n  CanvasKit,\n  CubicResampler as CKCubicResampler,\n  FilterOptions as CKFilterOptions,\n} from \"canvaskit-wasm\";\n\nimport {\n  type BlendMode,\n  type ClipOp,\n  type FilterMode,\n  type MipmapMode,\n  type PointMode,\n  type SaveLayerFlag,\n  type ImageInfo,\n  type SkCanvas,\n  type SkColor,\n  type SkFont,\n  type SkImage,\n  type SkImageFilter,\n  type SkMatrix,\n  type SkPaint,\n  type SkPath,\n  type SkPicture,\n  type SkPoint,\n  type SkRect,\n  type InputRRect,\n  type SkSVG,\n  type SkTextBlob,\n  type SkVertices,\n  type SkRSXform,\n  type CubicResampler,\n  type FilterOptions,\n  isCubicSampling,\n} from \"../types\";\n\nimport { getEnum, HostObject } from \"./Host\";\nimport { JsiSkPaint } from \"./JsiSkPaint\";\nimport { JsiSkRect } from \"./JsiSkRect\";\nimport { JsiSkRRect } from \"./JsiSkRRect\";\nimport { JsiSkImage } from \"./JsiSkImage\";\nimport { JsiSkVertices } from \"./JsiSkVertices\";\nimport { JsiSkPath } from \"./JsiSkPath\";\nimport { JsiSkFont } from \"./JsiSkFont\";\nimport { JsiSkTextBlob } from \"./JsiSkTextBlob\";\nimport { JsiSkPicture } from \"./JsiSkPicture\";\nimport { JsiSkMatrix } from \"./JsiSkMatrix\";\nimport { JsiSkImageFilter } from \"./JsiSkImageFilter\";\nimport { JsiSkPoint } from \"./JsiSkPoint\";\nimport { JsiSkRSXform } from \"./JsiSkRSXform\";\nimport type { JsiSkSVG } from \"./JsiSkSVG\";\n\nexport class JsiSkCanvas\n  extends HostObject<Canvas, \"Canvas\">\n  implements SkCanvas\n{\n  constructor(CanvasKit: CanvasKit, ref: Canvas) {\n    super(CanvasKit, ref, \"Canvas\");\n  }\n\n  dispose = () => {\n    this.ref.delete();\n  };\n\n  drawRect(rect: SkRect, paint: SkPaint) {\n    this.ref.drawRect(\n      JsiSkRect.fromValue(this.CanvasKit, rect),\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawImage(image: SkImage, x: number, y: number, paint?: SkPaint) {\n    this.ref.drawImage(\n      JsiSkImage.fromValue(image),\n      x,\n      y,\n      paint ? JsiSkPaint.fromValue(paint) : paint\n    );\n  }\n\n  drawImageRect(\n    img: SkImage,\n    src: SkRect,\n    dest: SkRect,\n    paint: SkPaint,\n    fastSample?: boolean\n  ) {\n    this.ref.drawImageRect(\n      JsiSkImage.fromValue(img),\n      JsiSkRect.fromValue(this.CanvasKit, src),\n      JsiSkRect.fromValue(this.CanvasKit, dest),\n      JsiSkPaint.fromValue(paint),\n      fastSample\n    );\n  }\n\n  drawImageCubic(\n    img: SkImage,\n    left: number,\n    top: number,\n    B: number,\n    C: number,\n    paint?: SkPaint | null\n  ) {\n    this.ref.drawImageCubic(\n      JsiSkImage.fromValue(img),\n      left,\n      top,\n      B,\n      C,\n      paint ? JsiSkPaint.fromValue(paint) : paint\n    );\n  }\n\n  drawImageOptions(\n    img: SkImage,\n    left: number,\n    top: number,\n    fm: FilterMode,\n    mm: MipmapMode,\n    paint?: SkPaint | null\n  ) {\n    this.ref.drawImageOptions(\n      JsiSkImage.fromValue(img),\n      left,\n      top,\n      getEnum(this.CanvasKit, \"FilterMode\", fm),\n      getEnum(this.CanvasKit, \"MipmapMode\", mm),\n      paint ? JsiSkPaint.fromValue(paint) : paint\n    );\n  }\n\n  drawImageNine(\n    img: SkImage,\n    center: SkRect,\n    dest: SkRect,\n    filter: FilterMode,\n    paint?: SkPaint | null\n  ) {\n    this.ref.drawImageNine(\n      JsiSkImage.fromValue(img),\n      Array.from(JsiSkRect.fromValue(this.CanvasKit, center)),\n      JsiSkRect.fromValue(this.CanvasKit, dest),\n      getEnum(this.CanvasKit, \"FilterMode\", filter),\n      paint ? JsiSkPaint.fromValue(paint) : paint\n    );\n  }\n\n  drawImageRectCubic(\n    img: SkImage,\n    src: SkRect,\n    dest: SkRect,\n    B: number,\n    C: number,\n    paint?: SkPaint | null\n  ) {\n    this.ref.drawImageRectCubic(\n      JsiSkImage.fromValue(img),\n      JsiSkRect.fromValue(this.CanvasKit, src),\n      JsiSkRect.fromValue(this.CanvasKit, dest),\n      B,\n      C,\n      paint ? JsiSkPaint.fromValue(paint) : paint\n    );\n  }\n\n  drawImageRectOptions(\n    img: SkImage,\n    src: SkRect,\n    dest: SkRect,\n    fm: FilterMode,\n    mm: MipmapMode,\n    paint?: SkPaint | null\n  ) {\n    this.ref.drawImageRectOptions(\n      JsiSkImage.fromValue(img),\n      JsiSkRect.fromValue(this.CanvasKit, src),\n      JsiSkRect.fromValue(this.CanvasKit, dest),\n      getEnum(this.CanvasKit, \"FilterMode\", fm),\n      getEnum(this.CanvasKit, \"MipmapMode\", mm),\n      paint ? JsiSkPaint.fromValue(paint) : paint\n    );\n  }\n\n  drawPaint(paint: SkPaint) {\n    this.ref.drawPaint(JsiSkPaint.fromValue(paint));\n  }\n\n  drawLine(x0: number, y0: number, x1: number, y1: number, paint: SkPaint) {\n    this.ref.drawLine(x0, y0, x1, y1, JsiSkPaint.fromValue(paint));\n  }\n\n  drawCircle(cx: number, cy: number, radius: number, paint: SkPaint) {\n    this.ref.drawCircle(cx, cy, radius, JsiSkPaint.fromValue(paint));\n  }\n\n  drawVertices(verts: SkVertices, mode: BlendMode, paint: SkPaint) {\n    this.ref.drawVertices(\n      JsiSkVertices.fromValue(verts),\n      getEnum(this.CanvasKit, \"BlendMode\", mode),\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawPatch(\n    cubics: SkPoint[],\n    colors?: SkColor[] | null,\n    texs?: SkPoint[] | null,\n    mode?: BlendMode | null,\n    paint?: SkPaint\n  ) {\n    this.ref.drawPatch(\n      cubics.map(({ x, y }) => [x, y]).flat(),\n      colors,\n      texs ? texs.flatMap((p) => Array.from(JsiSkPoint.fromValue(p))) : texs,\n      mode ? getEnum(this.CanvasKit, \"BlendMode\", mode) : null,\n      paint ? JsiSkPaint.fromValue(paint) : undefined\n    );\n  }\n\n  restoreToCount(saveCount: number) {\n    this.ref.restoreToCount(saveCount);\n  }\n\n  drawPoints(mode: PointMode, points: SkPoint[], paint: SkPaint) {\n    this.ref.drawPoints(\n      getEnum(this.CanvasKit, \"PointMode\", mode),\n      points.map(({ x, y }) => [x, y]).flat(),\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawArc(\n    oval: SkRect,\n    startAngle: number,\n    sweepAngle: number,\n    useCenter: boolean,\n    paint: SkPaint\n  ) {\n    this.ref.drawArc(\n      JsiSkRect.fromValue(this.CanvasKit, oval),\n      startAngle,\n      sweepAngle,\n      useCenter,\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawRRect(rrect: InputRRect, paint: SkPaint) {\n    this.ref.drawRRect(\n      JsiSkRRect.fromValue(this.CanvasKit, rrect),\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawDRRect(outer: InputRRect, inner: InputRRect, paint: SkPaint) {\n    this.ref.drawDRRect(\n      JsiSkRRect.fromValue(this.CanvasKit, outer),\n      JsiSkRRect.fromValue(this.CanvasKit, inner),\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawOval(oval: SkRect, paint: SkPaint) {\n    this.ref.drawOval(\n      JsiSkRect.fromValue(this.CanvasKit, oval),\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawPath(path: SkPath, paint: SkPaint) {\n    this.ref.drawPath(JsiSkPath.fromValue(path), JsiSkPaint.fromValue(paint));\n  }\n\n  drawText(str: string, x: number, y: number, paint: SkPaint, font: SkFont) {\n    this.ref.drawText(\n      str,\n      x,\n      y,\n      JsiSkPaint.fromValue(paint),\n      JsiSkFont.fromValue(font)\n    );\n  }\n\n  drawTextBlob(blob: SkTextBlob, x: number, y: number, paint: SkPaint) {\n    this.ref.drawTextBlob(\n      JsiSkTextBlob.fromValue(blob),\n      x,\n      y,\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawGlyphs(\n    glyphs: number[],\n    positions: SkPoint[],\n    x: number,\n    y: number,\n    font: SkFont,\n    paint: SkPaint\n  ) {\n    this.ref.drawGlyphs(\n      glyphs,\n      positions.map((p) => [p.x, p.y]).flat(),\n      x,\n      y,\n      JsiSkFont.fromValue(font),\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawSvg(svg: SkSVG, _width?: number, _height?: number) {\n    const image = this.CanvasKit.MakeImageFromCanvasImageSource(\n      (svg as JsiSkSVG).ref\n    );\n    this.ref.drawImage(image, 0, 0);\n  }\n\n  save() {\n    return this.ref.save();\n  }\n\n  saveLayer(\n    paint?: SkPaint,\n    bounds?: SkRect | null,\n    backdrop?: SkImageFilter | null,\n    flags?: SaveLayerFlag\n  ) {\n    return this.ref.saveLayer(\n      paint ? JsiSkPaint.fromValue(paint) : undefined,\n      bounds ? JsiSkRect.fromValue(this.CanvasKit, bounds) : bounds,\n      backdrop ? JsiSkImageFilter.fromValue(backdrop) : backdrop,\n      flags\n    );\n  }\n\n  restore() {\n    this.ref.restore();\n  }\n\n  rotate(rotationInDegrees: number, rx: number, ry: number) {\n    this.ref.rotate(rotationInDegrees, rx, ry);\n  }\n\n  scale(sx: number, sy: number) {\n    this.ref.scale(sx, sy);\n  }\n\n  skew(sx: number, sy: number) {\n    this.ref.skew(sx, sy);\n  }\n\n  translate(dx: number, dy: number) {\n    this.ref.translate(dx, dy);\n  }\n\n  drawColor(color: SkColor, blendMode?: BlendMode) {\n    this.ref.drawColor(\n      color,\n      blendMode ? getEnum(this.CanvasKit, \"BlendMode\", blendMode) : undefined\n    );\n  }\n\n  clear(color: SkColor) {\n    this.ref.clear(color);\n  }\n\n  clipPath(path: SkPath, op: ClipOp, doAntiAlias: boolean) {\n    this.ref.clipPath(\n      JsiSkPath.fromValue(path),\n      getEnum(this.CanvasKit, \"PathOp\", op),\n      doAntiAlias\n    );\n  }\n\n  clipRect(rect: SkRect, op: ClipOp, doAntiAlias: boolean) {\n    this.ref.clipRect(\n      JsiSkRect.fromValue(this.CanvasKit, rect),\n      getEnum(this.CanvasKit, \"PathOp\", op),\n      doAntiAlias\n    );\n  }\n\n  clipRRect(rrect: InputRRect, op: ClipOp, doAntiAlias: boolean) {\n    this.ref.clipRRect(\n      JsiSkRRect.fromValue(this.CanvasKit, rrect),\n      getEnum(this.CanvasKit, \"PathOp\", op),\n      doAntiAlias\n    );\n  }\n\n  concat(m: SkMatrix | number[]) {\n    this.ref.concat(Array.isArray(m) ? m : JsiSkMatrix.fromValue(m));\n  }\n\n  drawPicture(skp: SkPicture) {\n    this.ref.drawPicture(JsiSkPicture.fromValue(skp));\n  }\n\n  drawAtlas(\n    atlas: SkImage,\n    srcs: SkRect[],\n    dsts: SkRSXform[],\n    paint: SkPaint,\n    blendMode?: BlendMode,\n    colors?: SkColor[],\n    sampling?: CubicResampler | FilterOptions\n  ) {\n    const src = srcs.flatMap((s) =>\n      Array.from(JsiSkRect.fromValue(this.CanvasKit, s))\n    );\n    const dst = dsts.flatMap((s) => Array.from(JsiSkRSXform.fromValue(s)));\n    let cls: Uint32Array | undefined;\n    if (colors) {\n      cls = new Uint32Array(colors.length);\n      for (let i = 0; i < colors.length; i++) {\n        const [r, g, b, a] = colors[i];\n        cls[i] = this.CanvasKit.ColorAsInt(r * 255, g * 255, b * 255, a * 255);\n      }\n    }\n    let ckSampling: CKCubicResampler | CKFilterOptions = {\n      filter: this.CanvasKit.FilterMode.Linear,\n      mipmap: this.CanvasKit.MipmapMode.None,\n    };\n    if (sampling && isCubicSampling(sampling)) {\n      ckSampling = sampling;\n    } else if (sampling) {\n      ckSampling = {\n        filter: getEnum(this.CanvasKit, \"FilterMode\", sampling.filter),\n        mipmap: sampling.mipmap\n          ? getEnum(this.CanvasKit, \"MipmapMode\", sampling.mipmap)\n          : this.CanvasKit.MipmapMode.None,\n      };\n    }\n    this.ref.drawAtlas(\n      JsiSkImage.fromValue(atlas),\n      src,\n      dst,\n      JsiSkPaint.fromValue(paint),\n      blendMode\n        ? getEnum(this.CanvasKit, \"BlendMode\", blendMode)\n        : this.CanvasKit.BlendMode.DstOver,\n      cls,\n      ckSampling\n    );\n  }\n\n  readPixels(srcX: number, srcY: number, imageInfo: ImageInfo) {\n    const pxInfo = {\n      width: imageInfo.width,\n      height: imageInfo.height,\n      colorSpace: this.CanvasKit.ColorSpace.SRGB,\n      alphaType: getEnum(this.CanvasKit, \"AlphaType\", imageInfo.alphaType),\n      colorType: getEnum(this.CanvasKit, \"ColorType\", imageInfo.colorType),\n    };\n    return this.ref.readPixels(srcX, srcY, pxInfo);\n  }\n}\n"],"mappings":"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","ignoreList":[]}