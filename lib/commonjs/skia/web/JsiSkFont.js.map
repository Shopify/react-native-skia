{"version":3,"names":["_Host","require","_JsiSkPaint","_JsiSkPoint","_JsiSkRect","_JsiSkTypeface","_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","JsiSkFont","HostObject","constructor","CanvasKit","ref","delete","measureText","_text","_paint","throwNotImplementedOnRNWeb","getTextWidth","text","paint","ids","getGlyphIDs","widths","getGlyphWidths","reduce","a","b","getMetrics","result","ascent","descent","leading","bounds","JsiSkRect","undefined","str","numCodePoints","glyphs","JsiSkPaint","fromValue","getGlyphIntercepts","positions","top","bottom","map","p","Array","from","JsiSkPoint","flat","getScaleX","getSize","getSkewX","isEmbolden","getTypeface","tf","JsiSkTypeface","setEdging","edging","getEnum","setEmbeddedBitmaps","embeddedBitmaps","setHinting","hinting","setLinearMetrics","linearMetrics","setScaleX","sx","setSize","points","setSkewX","setEmbolden","embolden","setSubpixel","subpixel","setTypeface","face","exports"],"sources":["JsiSkFont.ts"],"sourcesContent":["import type { CanvasKit, Font } from \"canvaskit-wasm\";\n\nimport type {\n  FontEdging,\n  FontHinting,\n  SkFont,\n  SkPaint,\n  SkPoint,\n  SkRect,\n  SkTypeface,\n} from \"../types\";\n\nimport { HostObject, getEnum, throwNotImplementedOnRNWeb } from \"./Host\";\nimport { JsiSkPaint } from \"./JsiSkPaint\";\nimport { JsiSkPoint } from \"./JsiSkPoint\";\nimport { JsiSkRect } from \"./JsiSkRect\";\nimport { JsiSkTypeface } from \"./JsiSkTypeface\";\n\nexport class JsiSkFont extends HostObject<Font, \"Font\"> implements SkFont {\n  constructor(CanvasKit: CanvasKit, ref: Font) {\n    super(CanvasKit, ref, \"Font\");\n  }\n\n  measureText(_text: string, _paint?: SkPaint | undefined) {\n    return throwNotImplementedOnRNWeb<SkRect>();\n  }\n\n  dispose = () => {\n    this.ref.delete();\n  };\n\n  getTextWidth(text: string, paint?: SkPaint | undefined) {\n    const ids = this.getGlyphIDs(text);\n    const widths = this.getGlyphWidths(ids, paint);\n    return widths.reduce((a, b) => a + b, 0);\n  }\n\n  getMetrics() {\n    const result = this.ref.getMetrics();\n    return {\n      ascent: result.ascent,\n      descent: result.descent,\n      leading: result.leading,\n      bounds: result.bounds\n        ? new JsiSkRect(this.CanvasKit, result.bounds)\n        : undefined,\n    };\n  }\n\n  getGlyphIDs(str: string, numCodePoints?: number) {\n    // TODO: Fix return value in the C++ implementation\n    return [...this.ref.getGlyphIDs(str, numCodePoints)];\n  }\n\n  // TODO: Fix return value in the C++ implementation, it return float32\n  getGlyphWidths(glyphs: number[], paint?: SkPaint | null) {\n    return [\n      ...this.ref.getGlyphWidths(\n        glyphs,\n        paint ? JsiSkPaint.fromValue(paint) : null\n      ),\n    ];\n  }\n\n  getGlyphIntercepts(\n    glyphs: number[],\n    positions: SkPoint[],\n    top: number,\n    bottom: number\n  ) {\n    return [\n      ...this.ref.getGlyphIntercepts(\n        glyphs,\n        positions.map((p) => Array.from(JsiSkPoint.fromValue(p))).flat(),\n        top,\n        bottom\n      ),\n    ];\n  }\n\n  getScaleX() {\n    return this.ref.getScaleX();\n  }\n\n  getSize() {\n    return this.ref.getSize();\n  }\n\n  getSkewX() {\n    return this.ref.getSkewX();\n  }\n\n  isEmbolden() {\n    return this.ref.isEmbolden();\n  }\n\n  getTypeface() {\n    const tf = this.ref.getTypeface();\n    return tf ? new JsiSkTypeface(this.CanvasKit, tf) : null;\n  }\n\n  setEdging(edging: FontEdging) {\n    this.ref.setEdging(getEnum(this.CanvasKit, \"FontEdging\", edging));\n  }\n\n  setEmbeddedBitmaps(embeddedBitmaps: boolean) {\n    this.ref.setEmbeddedBitmaps(embeddedBitmaps);\n  }\n\n  setHinting(hinting: FontHinting) {\n    this.ref.setHinting(getEnum(this.CanvasKit, \"FontHinting\", hinting));\n  }\n\n  setLinearMetrics(linearMetrics: boolean) {\n    this.ref.setLinearMetrics(linearMetrics);\n  }\n\n  setScaleX(sx: number) {\n    this.ref.setScaleX(sx);\n  }\n\n  setSize(points: number) {\n    this.ref.setSize(points);\n  }\n\n  setSkewX(sx: number) {\n    this.ref.setSkewX(sx);\n  }\n\n  setEmbolden(embolden: boolean) {\n    this.ref.setEmbolden(embolden);\n  }\n\n  setSubpixel(subpixel: boolean) {\n    this.ref.setSubpixel(subpixel);\n  }\n\n  setTypeface(face: SkTypeface | null) {\n    this.ref.setTypeface(face ? JsiSkTypeface.fromValue(face) : null);\n  }\n}\n"],"mappings":"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","ignoreList":[]}