{"version":3,"names":["_Host","require","_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","JsiSkTypefaceFontProvider","HostObject","constructor","CanvasKit","ref","matchFamilyStyle","_name","_style","throwNotImplementedOnRNWeb","countFamilies","getFamilyName","index","registerFont","typeface","familyName","strLen","lengthBytesUTF8","strPtr","_malloc","stringToUTF8","_registerFont","dispose","ptr","allocatedPointers","_free","delete","exports","str","encoder","TextEncoder","utf8","encode","length","outPtr","maxBytesToWrite","heap","HEAPU8","Error"],"sources":["JsiSkTypefaceFontProvider.ts"],"sourcesContent":["import type { CanvasKit, TypefaceFontProvider } from \"canvaskit-wasm\";\n\nimport type { SkTypefaceFontProvider } from \"../types/Paragraph/TypefaceFontProvider\";\nimport type { FontStyle, SkTypeface } from \"../types\";\n\nimport { HostObject, throwNotImplementedOnRNWeb } from \"./Host\";\n\nexport class JsiSkTypefaceFontProvider\n  extends HostObject<TypefaceFontProvider, \"FontMgr\">\n  implements SkTypefaceFontProvider\n{\n  private allocatedPointers: number[] = [];\n\n  constructor(CanvasKit: CanvasKit, ref: TypefaceFontProvider) {\n    super(CanvasKit, ref, \"FontMgr\");\n  }\n\n  matchFamilyStyle(_name: string, _style: FontStyle) {\n    return throwNotImplementedOnRNWeb<SkTypeface>();\n  }\n  countFamilies() {\n    return this.ref.countFamilies();\n  }\n  getFamilyName(index: number) {\n    return this.ref.getFamilyName(index);\n  }\n  registerFont(typeface: SkTypeface, familyName: string) {\n    const strLen = lengthBytesUTF8(familyName) + 1;\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    const strPtr = this.CanvasKit._malloc(strLen);\n    stringToUTF8(this.CanvasKit, familyName, strPtr, strLen);\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    this.ref._registerFont(typeface.ref, strPtr);\n  }\n\n  dispose() {\n    for (const ptr of this.allocatedPointers) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.CanvasKit._free(ptr);\n    }\n\n    this.ref.delete();\n  }\n}\n\nconst lengthBytesUTF8 = (str: string) => {\n  // TextEncoder will give us the byte length in UTF8 form\n  const encoder = new TextEncoder();\n  const utf8 = encoder.encode(str);\n  return utf8.length;\n};\n\nconst stringToUTF8 = (\n  CanvasKit: CanvasKit,\n  str: string,\n  outPtr: number,\n  maxBytesToWrite: number\n) => {\n  // TextEncoder will give us the byte array in UTF8 form\n  const encoder = new TextEncoder();\n  const utf8 = encoder.encode(str);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  const heap: Int8Array = CanvasKit.HEAPU8;\n\n  // Check if there's enough space\n  if (utf8.length > maxBytesToWrite) {\n    throw new Error(\"Not enough space to write UTF8 encoded string\");\n  }\n\n  // Copy the bytes\n  for (let i = 0; i < utf8.length; i++) {\n    heap[outPtr + i] = utf8[i];\n  }\n\n  // Null terminate\n  if (utf8.length < maxBytesToWrite) {\n    heap[outPtr + utf8.length] = 0;\n  }\n};\n"],"mappings":"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","ignoreList":[]}