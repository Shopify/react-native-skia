{"version":3,"names":["Skia","isRect","createPicture","cb","rect","recorder","PictureRecorder","bounds","XYWHRect","width","height","canvas","beginRecording","finishRecordingAsPicture"],"sources":["Picture.ts"],"sourcesContent":["import { Skia } from \"../Skia\";\nimport type { SkCanvas, SkRect, SkSize } from \"../types\";\nimport { isRect } from \"../types\";\n\n/**\n * Memoizes and returns an SkPicture that can be drawn to another canvas.\n * @param rect Picture bounds\n * @param cb Callback for drawing to the canvas\n * @returns SkPicture\n */\nexport const createPicture = (\n  cb: (canvas: SkCanvas) => void,\n  rect?: SkRect | SkSize\n) => {\n  \"worklet\";\n  const recorder = Skia.PictureRecorder();\n  let bounds: undefined | SkRect;\n  if (rect) {\n    bounds = isRect(rect) ? rect : Skia.XYWHRect(0, 0, rect.width, rect.height);\n  }\n  const canvas = recorder.beginRecording(bounds);\n  cb(canvas);\n  return recorder.finishRecordingAsPicture();\n};\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,SAAS;AAE9B,SAASC,MAAM,QAAQ,UAAU;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAGA,CAC3BC,EAA8B,EAC9BC,IAAsB,KACnB;EACH,SAAS;;EACT,MAAMC,QAAQ,GAAGL,IAAI,CAACM,eAAe,CAAC,CAAC;EACvC,IAAIC,MAA0B;EAC9B,IAAIH,IAAI,EAAE;IACRG,MAAM,GAAGN,MAAM,CAACG,IAAI,CAAC,GAAGA,IAAI,GAAGJ,IAAI,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEJ,IAAI,CAACK,KAAK,EAAEL,IAAI,CAACM,MAAM,CAAC;EAC7E;EACA,MAAMC,MAAM,GAAGN,QAAQ,CAACO,cAAc,CAACL,MAAM,CAAC;EAC9CJ,EAAE,CAACQ,MAAM,CAAC;EACV,OAAON,QAAQ,CAACQ,wBAAwB,CAAC,CAAC;AAC5C,CAAC","ignoreList":[]}