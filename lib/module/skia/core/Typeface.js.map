{"version":3,"names":["Skia","useRawData","tfFactory","Typeface","MakeFreeTypeFaceFromData","bind","useTypeface","source","onError"],"sources":["Typeface.ts"],"sourcesContent":["import { Skia } from \"../Skia\";\nimport type { DataSourceParam } from \"../types\";\n\nimport { useRawData } from \"./Data\";\n\nconst tfFactory = Skia.Typeface.MakeFreeTypeFaceFromData.bind(Skia.Typeface);\n\n/**\n * Returns a Skia Typeface object\n * */\nexport const useTypeface = (\n  source: DataSourceParam,\n  onError?: (err: Error) => void\n) => useRawData(source, tfFactory, onError);\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,SAAS;AAG9B,SAASC,UAAU,QAAQ,QAAQ;AAEnC,MAAMC,SAAS,GAAGF,IAAI,CAACG,QAAQ,CAACC,wBAAwB,CAACC,IAAI,CAACL,IAAI,CAACG,QAAQ,CAAC;;AAE5E;AACA;AACA;AACA,OAAO,MAAMG,WAAW,GAAGA,CACzBC,MAAuB,EACvBC,OAA8B,KAC3BP,UAAU,CAACM,MAAM,EAAEL,SAAS,EAAEM,OAAO,CAAC","ignoreList":[]}