{"version":3,"names":[],"sources":["PathFactory.ts"],"sourcesContent":["import type { SkFont } from \"../Font\";\n\nimport type { SkPath, PathOp, PathCommand } from \"./Path\";\n\nexport interface PathFactory {\n  Make(): SkPath;\n  /**\n   * Creates a new path from the provided SVG string. If this fails, null will be\n   * returned instead.\n   * @param str\n   */\n  MakeFromSVGString(str: string): SkPath | null;\n\n  /**\n   * Creates a new path by combining the given paths according to op. If this fails, null will\n   * be returned instead.\n   * @param one\n   * @param two\n   * @param op\n   */\n  MakeFromOp(one: SkPath, two: SkPath, op: PathOp): SkPath | null;\n\n  /**\n   * Creates a new path from the given list of path commands. If this fails, null will be\n   * returned instead.\n   * @param cmds\n   */\n  MakeFromCmds(cmds: PathCommand[]): SkPath | null;\n\n  /**\n   * Converts the text to a path with the given font at location x / y.\n   */\n  MakeFromText(text: string, x: number, y: number, font: SkFont): SkPath | null;\n}\n"],"mappings":"","ignoreList":[]}