{"version":3,"names":[],"sources":["RuntimeEffect.ts"],"sourcesContent":["import type { SkShader } from \"../Shader\";\nimport type { SkJSIInstance } from \"../JsiInstance\";\nimport type { SkMatrix } from \"../Matrix\";\n\nexport interface SkSLUniform {\n  columns: number;\n  rows: number;\n  /** The index into the uniforms array that this uniform begins. */\n  slot: number;\n  isInteger: boolean;\n}\n\nexport interface SkRuntimeShaderBuilder\n  extends SkJSIInstance<\"RuntimeShaderBuilder\"> {\n  setUniform(name: string, value: readonly number[]): void;\n}\n\nexport interface SkRuntimeEffect extends SkJSIInstance<\"RuntimeEffect\"> {\n  /**\n   * Returns a shader executed using the given uniform data.\n   * @param uniforms\n   * @param localMatrix\n   */\n  makeShader(uniforms: number[], localMatrix?: SkMatrix): SkShader;\n\n  /**\n   * Returns a shader executed using the given uniform data and the children as inputs.\n   * @param uniforms\n   * @param children\n   * @param localMatrix\n   */\n  makeShaderWithChildren(\n    uniforms: number[],\n    children?: SkShader[],\n    localMatrix?: SkMatrix\n  ): SkShader;\n\n  /**\n   * Returns the nth uniform from the effect.\n   * @param index\n   */\n  getUniform(index: number): SkSLUniform;\n\n  /**\n   * Returns the number of uniforms in the effect.\n   */\n  getUniformCount(): number;\n\n  /**\n   * Returns the total number of floats across all uniforms on the effect. This is the length\n   * of the uniforms array expected by makeShader. For example, an effect with a single float3\n   * uniform, would return 1 from `getUniformCount()`, but 3 from `getUniformFloatCount()`.\n   */\n  getUniformFloatCount(): number;\n\n  /**\n   * Returns the name of the nth effect uniform.\n   * @param index\n   */\n  getUniformName(index: number): string;\n\n  /**\n   * Returns the SkSL source of the runtime effect shader.\n   */\n  source(): string;\n}\n"],"mappings":"","ignoreList":[]}