{"version":3,"names":[],"sources":["ColorFilterFactory.ts"],"sourcesContent":["import type { SkColor } from \"../Color\";\nimport type { BlendMode } from \"../Paint\";\n\nimport type { SkColorFilter } from \"./ColorFilter\";\n\nexport type InputColorMatrix = number[];\n\nexport interface ColorFilterFactory {\n  /**\n   * Creates a color filter using the provided color matrix.\n   * @param cMatrix\n   */\n  MakeMatrix(cMatrix: InputColorMatrix): SkColorFilter;\n\n  /**\n   * Makes a color filter with the given color and blend mode.\n   * @param color\n   * @param mode\n   */\n  MakeBlend(color: SkColor, mode: BlendMode): SkColorFilter;\n\n  /**\n   * Makes a color filter composing two color filters.\n   * @param outer\n   * @param inner\n   */\n  MakeCompose(outer: SkColorFilter, inner: SkColorFilter): SkColorFilter;\n\n  /**\n   * Makes a color filter that is linearly interpolated between two other color filters.\n   * @param t - a float in the range of 0.0 to 1.0.\n   * @param dst\n   * @param src\n   */\n  MakeLerp(t: number, dst: SkColorFilter, src: SkColorFilter): SkColorFilter;\n\n  /**\n   * Makes a color filter that converts between linear colors and sRGB colors.\n   */\n  MakeLinearToSRGBGamma(): SkColorFilter;\n\n  /**\n   * Makes a color filter that converts between sRGB colors and linear colors.\n   */\n  MakeSRGBToLinearGamma(): SkColorFilter;\n\n  /**\n   * Makes a color filter that multiplies the luma of its input into the alpha channel,\n   * and sets the red, green, and blue channels to zero.\n   */\n  MakeLumaColorFilter(): SkColorFilter;\n}\n"],"mappings":"","ignoreList":[]}