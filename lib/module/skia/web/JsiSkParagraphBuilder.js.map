{"version":3,"names":["PlaceholderAlignment","TextBaseline","HostObject","JsiSkParagraph","JsiSkTextStyle","JsiSkPaint","JsiSkParagraphBuilder","constructor","CanvasKit","ref","addPlaceholder","width","height","alignment","Baseline","baseline","Alphabetic","offset","value","addText","text","build","reset","pushStyle","style","foregroundPaint","backgroundPaint","textStyle","toTextStyle","_textStyle$color","_textStyle$background","fg","fromValue","makePaint","color","Float32Array","of","bg","backgroundColor","pushPaintStyle","TextStyle","pop","dispose","delete","paint","Paint","setColor"],"sources":["JsiSkParagraphBuilder.ts"],"sourcesContent":["import type {\n  CanvasKit,\n  InputColor,\n  Paint,\n  ParagraphBuilder,\n  TextStyle,\n} from \"canvaskit-wasm\";\n\nimport type {\n  SkParagraphBuilder,\n  SkParagraph,\n  SkTextStyle,\n  SkPaint,\n} from \"../types\";\nimport { PlaceholderAlignment, TextBaseline } from \"../types\";\n\nimport { HostObject } from \"./Host\";\nimport { JsiSkParagraph } from \"./JsiSkParagraph\";\nimport { JsiSkTextStyle } from \"./JsiSkTextStyle\";\nimport { JsiSkPaint } from \"./JsiSkPaint\";\n\nexport class JsiSkParagraphBuilder\n  extends HostObject<ParagraphBuilder, \"ParagraphBuilder\">\n  implements SkParagraphBuilder\n{\n  constructor(CanvasKit: CanvasKit, ref: ParagraphBuilder) {\n    super(CanvasKit, ref, \"ParagraphBuilder\");\n  }\n\n  addPlaceholder(\n    width: number | undefined = 0,\n    height: number | undefined = 0,\n    alignment: PlaceholderAlignment | undefined = PlaceholderAlignment.Baseline,\n    baseline: TextBaseline | undefined = TextBaseline.Alphabetic,\n    offset: number | undefined = 0\n  ): SkParagraphBuilder {\n    this.ref.addPlaceholder(\n      width,\n      height,\n      { value: alignment },\n      { value: baseline },\n      offset\n    );\n    return this;\n  }\n  addText(text: string): SkParagraphBuilder {\n    this.ref.addText(text);\n    return this;\n  }\n\n  build(): SkParagraph {\n    return new JsiSkParagraph(this.CanvasKit, this.ref.build());\n  }\n\n  reset(): void {\n    this.ref.reset();\n  }\n\n  pushStyle(\n    style: SkTextStyle,\n    foregroundPaint?: SkPaint | undefined,\n    backgroundPaint?: SkPaint | undefined\n  ): SkParagraphBuilder {\n    const textStyle: TextStyle = JsiSkTextStyle.toTextStyle(style);\n    if (foregroundPaint || backgroundPaint) {\n      // Due the canvaskit API not exposing textStyle methods,\n      // we set the default paint color to black for the foreground\n      // and transparent for the background\n      const fg: Paint = foregroundPaint\n        ? JsiSkPaint.fromValue(foregroundPaint)\n        : this.makePaint(textStyle.color ?? Float32Array.of(0, 0, 0, 1));\n      const bg: Paint = backgroundPaint\n        ? JsiSkPaint.fromValue(backgroundPaint)\n        : this.makePaint(\n            textStyle.backgroundColor ?? Float32Array.of(0, 0, 0, 0)\n          );\n      this.ref.pushPaintStyle(new this.CanvasKit.TextStyle(textStyle), fg, bg);\n    } else {\n      this.ref.pushStyle(new this.CanvasKit.TextStyle(textStyle));\n    }\n\n    return this;\n  }\n\n  pop(): SkParagraphBuilder {\n    this.ref.pop();\n    return this;\n  }\n\n  dispose() {\n    this.ref.delete();\n  }\n\n  private makePaint(color: InputColor) {\n    const paint = new this.CanvasKit.Paint();\n    paint.setColor(color);\n    return paint;\n  }\n}\n"],"mappings":"AAcA,SAASA,oBAAoB,EAAEC,YAAY,QAAQ,UAAU;AAE7D,SAASC,UAAU,QAAQ,QAAQ;AACnC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,UAAU,QAAQ,cAAc;AAEzC,OAAO,MAAMC,qBAAqB,SACxBJ,UAAU,CAEpB;EACEK,WAAWA,CAACC,SAAoB,EAAEC,GAAqB,EAAE;IACvD,KAAK,CAACD,SAAS,EAAEC,GAAG,EAAE,kBAAkB,CAAC;EAC3C;EAEAC,cAAcA,CACZC,KAAyB,GAAG,CAAC,EAC7BC,MAA0B,GAAG,CAAC,EAC9BC,SAA2C,GAAGb,oBAAoB,CAACc,QAAQ,EAC3EC,QAAkC,GAAGd,YAAY,CAACe,UAAU,EAC5DC,MAA0B,GAAG,CAAC,EACV;IACpB,IAAI,CAACR,GAAG,CAACC,cAAc,CACrBC,KAAK,EACLC,MAAM,EACN;MAAEM,KAAK,EAAEL;IAAU,CAAC,EACpB;MAAEK,KAAK,EAAEH;IAAS,CAAC,EACnBE,MACF,CAAC;IACD,OAAO,IAAI;EACb;EACAE,OAAOA,CAACC,IAAY,EAAsB;IACxC,IAAI,CAACX,GAAG,CAACU,OAAO,CAACC,IAAI,CAAC;IACtB,OAAO,IAAI;EACb;EAEAC,KAAKA,CAAA,EAAgB;IACnB,OAAO,IAAIlB,cAAc,CAAC,IAAI,CAACK,SAAS,EAAE,IAAI,CAACC,GAAG,CAACY,KAAK,CAAC,CAAC,CAAC;EAC7D;EAEAC,KAAKA,CAAA,EAAS;IACZ,IAAI,CAACb,GAAG,CAACa,KAAK,CAAC,CAAC;EAClB;EAEAC,SAASA,CACPC,KAAkB,EAClBC,eAAqC,EACrCC,eAAqC,EACjB;IACpB,MAAMC,SAAoB,GAAGvB,cAAc,CAACwB,WAAW,CAACJ,KAAK,CAAC;IAC9D,IAAIC,eAAe,IAAIC,eAAe,EAAE;MAAA,IAAAG,gBAAA,EAAAC,qBAAA;MACtC;MACA;MACA;MACA,MAAMC,EAAS,GAAGN,eAAe,GAC7BpB,UAAU,CAAC2B,SAAS,CAACP,eAAe,CAAC,GACrC,IAAI,CAACQ,SAAS,EAAAJ,gBAAA,GAACF,SAAS,CAACO,KAAK,cAAAL,gBAAA,cAAAA,gBAAA,GAAIM,YAAY,CAACC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAClE,MAAMC,EAAS,GAAGX,eAAe,GAC7BrB,UAAU,CAAC2B,SAAS,CAACN,eAAe,CAAC,GACrC,IAAI,CAACO,SAAS,EAAAH,qBAAA,GACZH,SAAS,CAACW,eAAe,cAAAR,qBAAA,cAAAA,qBAAA,GAAIK,YAAY,CAACC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACzD,CAAC;MACL,IAAI,CAAC3B,GAAG,CAAC8B,cAAc,CAAC,IAAI,IAAI,CAAC/B,SAAS,CAACgC,SAAS,CAACb,SAAS,CAAC,EAAEI,EAAE,EAAEM,EAAE,CAAC;IAC1E,CAAC,MAAM;MACL,IAAI,CAAC5B,GAAG,CAACc,SAAS,CAAC,IAAI,IAAI,CAACf,SAAS,CAACgC,SAAS,CAACb,SAAS,CAAC,CAAC;IAC7D;IAEA,OAAO,IAAI;EACb;EAEAc,GAAGA,CAAA,EAAuB;IACxB,IAAI,CAAChC,GAAG,CAACgC,GAAG,CAAC,CAAC;IACd,OAAO,IAAI;EACb;EAEAC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACjC,GAAG,CAACkC,MAAM,CAAC,CAAC;EACnB;EAEQV,SAASA,CAACC,KAAiB,EAAE;IACnC,MAAMU,KAAK,GAAG,IAAI,IAAI,CAACpC,SAAS,CAACqC,KAAK,CAAC,CAAC;IACxCD,KAAK,CAACE,QAAQ,CAACZ,KAAK,CAAC;IACrB,OAAOU,KAAK;EACd;AACF","ignoreList":[]}