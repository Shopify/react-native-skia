{"version":3,"names":["interpolate","interpolateVector","value","inputRange","outputRange","options","x","map","v","y","mixVector","from","to"],"sources":["interpolateVector.ts"],"sourcesContent":["import type { Vector } from \"../../skia/types\";\n\nimport { interpolate } from \"./interpolate\";\n\nexport const interpolateVector = (\n  value: number,\n  inputRange: readonly number[],\n  outputRange: readonly Vector[],\n  options?: Parameters<typeof interpolate>[3]\n) => {\n  \"worklet\";\n  return {\n    x: interpolate(\n      value,\n      inputRange,\n      outputRange.map((v) => v.x),\n      options\n    ),\n    y: interpolate(\n      value,\n      inputRange,\n      outputRange.map((v) => v.y),\n      options\n    ),\n  };\n};\n\nexport const mixVector = (value: number, from: Vector, to: Vector) => {\n  \"worklet\";\n  return interpolateVector(value, [0, 1], [from, to]);\n};\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,eAAe;AAE3C,OAAO,MAAMC,iBAAiB,GAAGA,CAC/BC,KAAa,EACbC,UAA6B,EAC7BC,WAA8B,EAC9BC,OAA2C,KACxC;EACH,SAAS;;EACT,OAAO;IACLC,CAAC,EAAEN,WAAW,CACZE,KAAK,EACLC,UAAU,EACVC,WAAW,CAACG,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACF,CAAC,CAAC,EAC3BD,OACF,CAAC;IACDI,CAAC,EAAET,WAAW,CACZE,KAAK,EACLC,UAAU,EACVC,WAAW,CAACG,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,CAAC,CAAC,EAC3BJ,OACF;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMK,SAAS,GAAGA,CAACR,KAAa,EAAES,IAAY,EAAEC,EAAU,KAAK;EACpE,SAAS;;EACT,OAAOX,iBAAiB,CAACC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAACS,IAAI,EAAEC,EAAE,CAAC,CAAC;AACrD,CAAC","ignoreList":[]}