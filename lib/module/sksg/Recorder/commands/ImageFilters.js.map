{"version":3,"names":["enumKey","processColor","processRadius","NodeType","BlendMode","BlurStyle","ColorChannel","processUniforms","TileMode","composeDeclarations","CommandType","MorphologyOperator","Black","Float32Array","of","MakeInnerShadow","Skia","shadowOnly","dx","dy","sigmaX","sigmaY","color","input","sourceGraphic","ImageFilter","MakeColorFilter","ColorFilter","MakeBlend","Dst","sourceAlpha","SrcIn","f1","SrcOut","f2","MakeOffset","f3","MakeBlur","Decal","f4","MakeCompose","SrcOver","declareBlurImageFilter","ctx","props","mode","blur","sigma","imgf","x","y","imageFilters","push","declareMorphologyImageFilter","operator","r","radius","Erode","MakeErode","MakeDilate","declareOffsetImageFilter","declareDropShadowImageFilter","cl","inner","factory","bind","MakeDropShadowOnly","MakeDropShadow","declareBlendImageFilter","blend","splice","length","composer","declareDisplacementMapImageFilter","channelX","channelY","scale","shader","shaders","pop","Error","map","MakeShader","MakeDisplacementMap","declareRuntimeShaderImageFilter","source","uniforms","rtb","RuntimeShaderBuilder","MakeRuntimeShader","composeImageFilters","outer","setBlurMaskFilter","style","respectCTM","mf","MaskFilter","paint","setMaskFilter","isPushImageFilter","command","type","PushImageFilter","isImageFilter","imageFilterType","pushImageFilter","BlurImageFilter","MorphologyImageFilter","BlendImageFilter","DisplacementMapImageFilter","DropShadowImageFilter","OffsetImageFilter","RuntimeShaderImageFilter"],"sources":["ImageFilters.ts"],"sourcesContent":["import { enumKey, processColor, processRadius } from \"../../../dom/nodes\";\nimport type {\n  BlendImageFilterProps,\n  BlurImageFilterProps,\n  BlurMaskFilterProps,\n  DisplacementMapImageFilterProps,\n  DropShadowImageFilterProps,\n  MorphologyImageFilterProps,\n  OffsetImageFilterProps,\n  RuntimeShaderImageFilterProps,\n} from \"../../../dom/types\";\nimport { NodeType } from \"../../../dom/types\";\nimport type { SkColor, SkImageFilter, Skia } from \"../../../skia/types\";\nimport {\n  BlendMode,\n  BlurStyle,\n  ColorChannel,\n  processUniforms,\n  TileMode,\n} from \"../../../skia/types\";\nimport { composeDeclarations } from \"../../utils\";\nimport type { Command } from \"../Core\";\nimport { CommandType } from \"../Core\";\nimport type { DrawingContext } from \"../DrawingContext\";\n\nexport enum MorphologyOperator {\n  Erode,\n  Dilate,\n}\n\nconst Black = Float32Array.of(0, 0, 0, 1);\n\nconst MakeInnerShadow = (\n  Skia: Skia,\n  shadowOnly: boolean | undefined,\n  dx: number,\n  dy: number,\n  sigmaX: number,\n  sigmaY: number,\n  color: SkColor,\n  input: SkImageFilter | null\n) => {\n  \"worklet\";\n  const sourceGraphic = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(Black, BlendMode.Dst),\n    null\n  );\n  const sourceAlpha = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(Black, BlendMode.SrcIn),\n    null\n  );\n  const f1 = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(color, BlendMode.SrcOut),\n    null\n  );\n  const f2 = Skia.ImageFilter.MakeOffset(dx, dy, f1);\n  const f3 = Skia.ImageFilter.MakeBlur(sigmaX, sigmaY, TileMode.Decal, f2);\n  const f4 = Skia.ImageFilter.MakeBlend(BlendMode.SrcIn, sourceAlpha, f3);\n  if (shadowOnly) {\n    return f4;\n  }\n  return Skia.ImageFilter.MakeCompose(\n    input,\n    Skia.ImageFilter.MakeBlend(BlendMode.SrcOver, sourceGraphic, f4)\n  );\n};\n\nconst declareBlurImageFilter = (\n  ctx: DrawingContext,\n  props: BlurImageFilterProps\n) => {\n  \"worklet\";\n  const { mode, blur } = props;\n  const sigma = processRadius(ctx.Skia, blur);\n  const imgf = ctx.Skia.ImageFilter.MakeBlur(\n    sigma.x,\n    sigma.y,\n    TileMode[enumKey(mode)],\n    null\n  );\n  ctx.imageFilters.push(imgf);\n};\n\nconst declareMorphologyImageFilter = (\n  ctx: DrawingContext,\n  props: MorphologyImageFilterProps\n) => {\n  \"worklet\";\n  const { operator } = props;\n  const r = processRadius(ctx.Skia, props.radius);\n  let imgf;\n  if (MorphologyOperator[enumKey(operator)] === MorphologyOperator.Erode) {\n    imgf = ctx.Skia.ImageFilter.MakeErode(r.x, r.y, null);\n  } else {\n    imgf = ctx.Skia.ImageFilter.MakeDilate(r.x, r.y, null);\n  }\n  ctx.imageFilters.push(imgf);\n};\n\nconst declareOffsetImageFilter = (\n  ctx: DrawingContext,\n  props: OffsetImageFilterProps\n) => {\n  \"worklet\";\n  const { x, y } = props;\n  const imgf = ctx.Skia.ImageFilter.MakeOffset(x, y, null);\n  ctx.imageFilters.push(imgf);\n};\n\nconst declareDropShadowImageFilter = (\n  ctx: DrawingContext,\n  props: DropShadowImageFilterProps\n) => {\n  \"worklet\";\n  const { dx, dy, blur, shadowOnly, color: cl, inner } = props;\n  const color = processColor(ctx.Skia, cl);\n  let factory;\n  if (inner) {\n    factory = MakeInnerShadow.bind(null, ctx.Skia, shadowOnly);\n  } else {\n    factory = shadowOnly\n      ? ctx.Skia.ImageFilter.MakeDropShadowOnly.bind(ctx.Skia.ImageFilter)\n      : ctx.Skia.ImageFilter.MakeDropShadow.bind(ctx.Skia.ImageFilter);\n  }\n  const imgf = factory(dx, dy, blur, blur, color, null);\n  ctx.imageFilters.push(imgf);\n};\n\nconst declareBlendImageFilter = (\n  ctx: DrawingContext,\n  props: BlendImageFilterProps\n) => {\n  \"worklet\";\n  const blend = BlendMode[enumKey(props.mode)];\n  // Blend ImageFilters\n  const imageFilters = ctx.imageFilters.splice(0, ctx.imageFilters.length);\n  const composer = ctx.Skia.ImageFilter.MakeBlend.bind(\n    ctx.Skia.ImageFilter,\n    blend\n  );\n  ctx.imageFilters.push(composeDeclarations(imageFilters, composer));\n};\n\nconst declareDisplacementMapImageFilter = (\n  ctx: DrawingContext,\n  props: DisplacementMapImageFilterProps\n) => {\n  \"worklet\";\n  const { channelX, channelY, scale } = props;\n  const shader = ctx.shaders.pop();\n  if (!shader) {\n    throw new Error(\"DisplacementMap expects a shader as child\");\n  }\n  const map = ctx.Skia.ImageFilter.MakeShader(shader, null);\n  const imgf = ctx.Skia.ImageFilter.MakeDisplacementMap(\n    ColorChannel[enumKey(channelX)],\n    ColorChannel[enumKey(channelY)],\n    scale,\n    map,\n    null\n  );\n  ctx.imageFilters.push(imgf);\n};\n\nconst declareRuntimeShaderImageFilter = (\n  ctx: DrawingContext,\n  props: RuntimeShaderImageFilterProps\n) => {\n  \"worklet\";\n  const { source, uniforms } = props;\n  const rtb = ctx.Skia.RuntimeShaderBuilder(source);\n  if (uniforms) {\n    processUniforms(source, uniforms, rtb);\n  }\n  const imgf = ctx.Skia.ImageFilter.MakeRuntimeShader(rtb, null, null);\n  ctx.imageFilters.push(imgf);\n};\n\nexport const composeImageFilters = (ctx: DrawingContext) => {\n  \"worklet\";\n  if (ctx.imageFilters.length > 1) {\n    const outer = ctx.imageFilters.pop()!;\n    const inner = ctx.imageFilters.pop()!;\n    ctx.imageFilters.push(ctx.Skia.ImageFilter.MakeCompose(outer, inner));\n  }\n};\n\nexport const setBlurMaskFilter = (\n  ctx: DrawingContext,\n  props: BlurMaskFilterProps\n) => {\n  \"worklet\";\n  const { blur, style, respectCTM } = props;\n  const mf = ctx.Skia.MaskFilter.MakeBlur(\n    BlurStyle[enumKey(style)],\n    blur,\n    respectCTM\n  );\n  ctx.paint.setMaskFilter(mf);\n};\n\nexport const isPushImageFilter = (\n  command: Command\n): command is Command<CommandType.PushImageFilter> => {\n  \"worklet\";\n  return command.type === CommandType.PushImageFilter;\n};\n\ntype Props = {\n  [NodeType.OffsetImageFilter]: OffsetImageFilterProps;\n  [NodeType.DisplacementMapImageFilter]: DisplacementMapImageFilterProps;\n  [NodeType.BlurImageFilter]: BlurImageFilterProps;\n  [NodeType.DropShadowImageFilter]: DropShadowImageFilterProps;\n  [NodeType.MorphologyImageFilter]: MorphologyImageFilterProps;\n  [NodeType.BlendImageFilter]: BlendImageFilterProps;\n  [NodeType.RuntimeShaderImageFilter]: RuntimeShaderImageFilterProps;\n};\n\ninterface PushImageFilter<T extends keyof Props>\n  extends Command<CommandType.PushImageFilter> {\n  imageFilterType: T;\n  props: Props[T];\n}\n\nconst isImageFilter = <T extends keyof Props>(\n  command: Command<CommandType.PushImageFilter>,\n  type: T\n): command is PushImageFilter<T> => {\n  \"worklet\";\n  return command.imageFilterType === type;\n};\n\nexport const pushImageFilter = (\n  ctx: DrawingContext,\n  command: Command<CommandType.PushImageFilter>\n) => {\n  \"worklet\";\n  if (isImageFilter(command, NodeType.BlurImageFilter)) {\n    declareBlurImageFilter(ctx, command.props);\n  } else if (isImageFilter(command, NodeType.MorphologyImageFilter)) {\n    declareMorphologyImageFilter(ctx, command.props);\n  } else if (isImageFilter(command, NodeType.BlendImageFilter)) {\n    declareBlendImageFilter(ctx, command.props);\n  } else if (isImageFilter(command, NodeType.DisplacementMapImageFilter)) {\n    declareDisplacementMapImageFilter(ctx, command.props);\n  } else if (isImageFilter(command, NodeType.DropShadowImageFilter)) {\n    declareDropShadowImageFilter(ctx, command.props);\n  } else if (isImageFilter(command, NodeType.OffsetImageFilter)) {\n    declareOffsetImageFilter(ctx, command.props);\n  } else if (isImageFilter(command, NodeType.RuntimeShaderImageFilter)) {\n    declareRuntimeShaderImageFilter(ctx, command.props);\n  } else {\n    throw new Error(\"Invalid image filter type: \" + command.imageFilterType);\n  }\n};\n"],"mappings":"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","ignoreList":[]}