{"version":3,"names":["isPathDef","processPath","processTransformProps2","ClipOp","isRRect","computeClip","Skia","clip","clipPath","clipRRect","clipRect","undefined","saveCTM","ctx","props","canvas","rawClip","invertClip","matrix","transform","origin","layer","hasTransform","hasClip","op","Difference","Intersect","m3","shouldSave","saveLayer","save","concat"],"sources":["CTM.ts"],"sourcesContent":["import {\n  isPathDef,\n  processPath,\n  processTransformProps2,\n} from \"../../../dom/nodes\";\nimport type { ClipDef, CTMProps } from \"../../../dom/types\";\nimport type { Skia, SkPath, SkRect, SkRRect } from \"../../../skia/types\";\nimport { ClipOp, isRRect } from \"../../../skia/types\";\nimport type { DrawingContext } from \"../DrawingContext\";\n\nconst computeClip = (\n  Skia: Skia,\n  clip: ClipDef | undefined\n):\n  | undefined\n  | { clipPath: SkPath }\n  | { clipRect: SkRect }\n  | { clipRRect: SkRRect } => {\n  \"worklet\";\n  if (clip) {\n    if (isPathDef(clip)) {\n      return { clipPath: processPath(Skia, clip) };\n    } else if (isRRect(clip)) {\n      return { clipRRect: clip };\n    } else {\n      return { clipRect: clip };\n    }\n  }\n  return undefined;\n};\n\nexport const saveCTM = (ctx: DrawingContext, props: CTMProps) => {\n  \"worklet\";\n  const { canvas, Skia } = ctx;\n  const {\n    clip: rawClip,\n    invertClip,\n    matrix,\n    transform,\n    origin,\n    layer,\n  } = props as CTMProps;\n  const hasTransform = matrix !== undefined || transform !== undefined;\n  const clip = computeClip(Skia, rawClip);\n  const hasClip = clip !== undefined;\n  const op = invertClip ? ClipOp.Difference : ClipOp.Intersect;\n  const m3 = processTransformProps2(Skia, { matrix, transform, origin });\n  const shouldSave = hasTransform || hasClip || !!layer;\n  if (shouldSave) {\n    if (layer) {\n      if (typeof layer === \"boolean\") {\n        canvas.saveLayer();\n      } else {\n        canvas.saveLayer(layer);\n      }\n    } else {\n      canvas.save();\n    }\n  }\n  if (m3) {\n    canvas.concat(m3);\n  }\n  if (clip) {\n    if (\"clipRect\" in clip) {\n      canvas.clipRect(clip.clipRect, op, true);\n    } else if (\"clipRRect\" in clip) {\n      canvas.clipRRect(clip.clipRRect, op, true);\n    } else {\n      canvas.clipPath(clip.clipPath, op, true);\n    }\n  }\n};\n"],"mappings":"AAAA,SACEA,SAAS,EACTC,WAAW,EACXC,sBAAsB,QACjB,oBAAoB;AAG3B,SAASC,MAAM,EAAEC,OAAO,QAAQ,qBAAqB;AAGrD,MAAMC,WAAW,GAAGA,CAClBC,IAAU,EACVC,IAAyB,KAKG;EAC5B,SAAS;;EACT,IAAIA,IAAI,EAAE;IACR,IAAIP,SAAS,CAACO,IAAI,CAAC,EAAE;MACnB,OAAO;QAAEC,QAAQ,EAAEP,WAAW,CAACK,IAAI,EAAEC,IAAI;MAAE,CAAC;IAC9C,CAAC,MAAM,IAAIH,OAAO,CAACG,IAAI,CAAC,EAAE;MACxB,OAAO;QAAEE,SAAS,EAAEF;MAAK,CAAC;IAC5B,CAAC,MAAM;MACL,OAAO;QAAEG,QAAQ,EAAEH;MAAK,CAAC;IAC3B;EACF;EACA,OAAOI,SAAS;AAClB,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGA,CAACC,GAAmB,EAAEC,KAAe,KAAK;EAC/D,SAAS;;EACT,MAAM;IAAEC,MAAM;IAAET;EAAK,CAAC,GAAGO,GAAG;EAC5B,MAAM;IACJN,IAAI,EAAES,OAAO;IACbC,UAAU;IACVC,MAAM;IACNC,SAAS;IACTC,MAAM;IACNC;EACF,CAAC,GAAGP,KAAiB;EACrB,MAAMQ,YAAY,GAAGJ,MAAM,KAAKP,SAAS,IAAIQ,SAAS,KAAKR,SAAS;EACpE,MAAMJ,IAAI,GAAGF,WAAW,CAACC,IAAI,EAAEU,OAAO,CAAC;EACvC,MAAMO,OAAO,GAAGhB,IAAI,KAAKI,SAAS;EAClC,MAAMa,EAAE,GAAGP,UAAU,GAAGd,MAAM,CAACsB,UAAU,GAAGtB,MAAM,CAACuB,SAAS;EAC5D,MAAMC,EAAE,GAAGzB,sBAAsB,CAACI,IAAI,EAAE;IAAEY,MAAM;IAAEC,SAAS;IAAEC;EAAO,CAAC,CAAC;EACtE,MAAMQ,UAAU,GAAGN,YAAY,IAAIC,OAAO,IAAI,CAAC,CAACF,KAAK;EACrD,IAAIO,UAAU,EAAE;IACd,IAAIP,KAAK,EAAE;MACT,IAAI,OAAOA,KAAK,KAAK,SAAS,EAAE;QAC9BN,MAAM,CAACc,SAAS,CAAC,CAAC;MACpB,CAAC,MAAM;QACLd,MAAM,CAACc,SAAS,CAACR,KAAK,CAAC;MACzB;IACF,CAAC,MAAM;MACLN,MAAM,CAACe,IAAI,CAAC,CAAC;IACf;EACF;EACA,IAAIH,EAAE,EAAE;IACNZ,MAAM,CAACgB,MAAM,CAACJ,EAAE,CAAC;EACnB;EACA,IAAIpB,IAAI,EAAE;IACR,IAAI,UAAU,IAAIA,IAAI,EAAE;MACtBQ,MAAM,CAACL,QAAQ,CAACH,IAAI,CAACG,QAAQ,EAAEc,EAAE,EAAE,IAAI,CAAC;IAC1C,CAAC,MAAM,IAAI,WAAW,IAAIjB,IAAI,EAAE;MAC9BQ,MAAM,CAACN,SAAS,CAACF,IAAI,CAACE,SAAS,EAAEe,EAAE,EAAE,IAAI,CAAC;IAC5C,CAAC,MAAM;MACLT,MAAM,CAACP,QAAQ,CAACD,IAAI,CAACC,QAAQ,EAAEgB,EAAE,EAAE,IAAI,CAAC;IAC1C;EACF;AACF,CAAC","ignoreList":[]}