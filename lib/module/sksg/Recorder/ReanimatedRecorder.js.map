{"version":3,"names":["isSharedValue","ReanimatedRecorder","constructor","Skia","_defineProperty","Set","recorder","Recorder","processAnimationValues","props","Object","values","forEach","value","has","name","size","add","getRecorder","getSharedValues","Array","from","saveGroup","restoreGroup","savePaint","restorePaint","restorePaintDeclaration","materializePaint","pushPathEffect","pathEffectType","pushImageFilter","imageFilterType","pushColorFilter","colorFilterType","pushShader","shaderType","pushBlurMaskFilter","composePathEffect","composeColorFilter","composeImageFilter","saveCTM","restoreCTM","drawPaint","saveLayer","saveBackdropFilter","drawBox","boxProps","shadows","shadow","map","s","drawImage","drawCircle","drawPoints","drawPath","drawRect","drawRRect","drawOval","drawLine","drawPatch","drawVertices","drawDiffRect","drawText","drawTextPath","drawTextBlob","drawGlyphs","drawPicture","drawImageSVG","drawParagraph","drawAtlas"],"sources":["ReanimatedRecorder.ts"],"sourcesContent":["import type { SharedValue } from \"react-native-reanimated\";\n\nimport type { BaseRecorder, JsiRecorder, Skia } from \"../../skia/types\";\nimport type {\n  PaintProps,\n  NodeType,\n  BlurMaskFilterProps,\n  CTMProps,\n  BoxProps,\n  BoxShadowProps,\n  ImageProps,\n  CircleProps,\n  PointsProps,\n  PathProps,\n  RectProps,\n  RoundedRectProps,\n  OvalProps,\n  LineProps,\n  PatchProps,\n  VerticesProps,\n  DiffRectProps,\n  TextProps,\n  TextPathProps,\n  TextBlobProps,\n  GlyphsProps,\n  PictureProps,\n  ImageSVGProps,\n  ParagraphProps,\n  AtlasProps,\n} from \"../../dom/types\";\nimport type { AnimatedProps } from \"../../renderer\";\nimport { isSharedValue } from \"../utils\";\n\nexport class ReanimatedRecorder implements BaseRecorder {\n  private values = new Set<SharedValue<unknown>>();\n  private recorder: JsiRecorder;\n\n  constructor(Skia: Skia) {\n    this.recorder = Skia.Recorder();\n  }\n\n  private processAnimationValues(props?: Record<string, unknown>) {\n    if (!props) {\n      return;\n    }\n    Object.values(props).forEach((value) => {\n      if (isSharedValue(value) && !this.values.has(value)) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        value.name = `variable${this.values.size}`;\n        this.values.add(value as SharedValue<unknown>);\n      }\n    });\n  }\n\n  getRecorder() {\n    return this.recorder;\n  }\n\n  getSharedValues() {\n    return Array.from(this.values);\n  }\n\n  saveGroup(): void {\n    this.recorder.saveGroup();\n  }\n\n  restoreGroup(): void {\n    this.recorder.restoreGroup();\n  }\n\n  savePaint(props: AnimatedProps<PaintProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.savePaint(props);\n  }\n\n  restorePaint(): void {\n    this.recorder.restorePaint();\n  }\n\n  restorePaintDeclaration(): void {\n    this.recorder.restorePaintDeclaration();\n  }\n\n  materializePaint(): void {\n    this.recorder.materializePaint();\n  }\n\n  pushPathEffect(\n    pathEffectType: NodeType,\n    props: AnimatedProps<unknown>\n  ): void {\n    this.processAnimationValues(props);\n    this.recorder.pushPathEffect(pathEffectType, props);\n  }\n\n  pushImageFilter(\n    imageFilterType: NodeType,\n    props: AnimatedProps<unknown>\n  ): void {\n    this.processAnimationValues(props);\n    this.recorder.pushImageFilter(imageFilterType, props);\n  }\n\n  pushColorFilter(\n    colorFilterType: NodeType,\n    props: AnimatedProps<unknown>\n  ): void {\n    this.processAnimationValues(props);\n    this.recorder.pushColorFilter(colorFilterType, props);\n  }\n\n  pushShader(shaderType: NodeType, props: AnimatedProps<unknown>): void {\n    this.processAnimationValues(props);\n    this.recorder.pushShader(shaderType, props);\n  }\n\n  pushBlurMaskFilter(props: AnimatedProps<BlurMaskFilterProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.pushBlurMaskFilter(props);\n  }\n\n  composePathEffect(): void {\n    this.recorder.composePathEffect();\n  }\n\n  composeColorFilter(): void {\n    this.recorder.composeColorFilter();\n  }\n\n  composeImageFilter(): void {\n    this.recorder.composeImageFilter();\n  }\n\n  saveCTM(props: AnimatedProps<CTMProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.saveCTM(props);\n  }\n\n  restoreCTM(): void {\n    this.recorder.restoreCTM();\n  }\n\n  drawPaint(): void {\n    this.recorder.drawPaint();\n  }\n\n  saveLayer(): void {\n    this.recorder.saveLayer();\n  }\n\n  saveBackdropFilter(): void {\n    this.recorder.saveBackdropFilter();\n  }\n\n  drawBox(\n    boxProps: AnimatedProps<BoxProps>,\n    shadows: {\n      props: BoxShadowProps;\n    }[]\n  ): void {\n    this.processAnimationValues(boxProps);\n    shadows.forEach((shadow) => {\n      this.processAnimationValues(\n        shadow.props as AnimatedProps<BoxShadowProps>\n      );\n    });\n    this.recorder.drawBox(\n      boxProps,\n      // TODO: Fix this type BaseRecorder.drawBox()\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      shadows.map((s) => s.props)\n    );\n  }\n\n  drawImage(props: AnimatedProps<ImageProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawImage(props);\n  }\n\n  drawCircle(props: AnimatedProps<CircleProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawCircle(props);\n  }\n\n  drawPoints(props: AnimatedProps<PointsProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawPoints(props);\n  }\n\n  drawPath(props: AnimatedProps<PathProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawPath(props);\n  }\n\n  drawRect(props: AnimatedProps<RectProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawRect(props);\n  }\n\n  drawRRect(props: AnimatedProps<RoundedRectProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawRRect(props);\n  }\n\n  drawOval(props: AnimatedProps<OvalProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawOval(props);\n  }\n\n  drawLine(props: AnimatedProps<LineProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawLine(props);\n  }\n\n  drawPatch(props: AnimatedProps<PatchProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawPatch(props);\n  }\n\n  drawVertices(props: AnimatedProps<VerticesProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawVertices(props);\n  }\n\n  drawDiffRect(props: AnimatedProps<DiffRectProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawDiffRect(props);\n  }\n\n  drawText(props: AnimatedProps<TextProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawText(props);\n  }\n\n  drawTextPath(props: AnimatedProps<TextPathProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawTextPath(props);\n  }\n\n  drawTextBlob(props: AnimatedProps<TextBlobProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawTextBlob(props);\n  }\n\n  drawGlyphs(props: AnimatedProps<GlyphsProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawGlyphs(props);\n  }\n\n  drawPicture(props: AnimatedProps<PictureProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawPicture(props);\n  }\n\n  drawImageSVG(props: AnimatedProps<ImageSVGProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawImageSVG(props);\n  }\n\n  drawParagraph(props: AnimatedProps<ParagraphProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawParagraph(props);\n  }\n\n  drawAtlas(props: AnimatedProps<AtlasProps>): void {\n    this.processAnimationValues(props);\n    this.recorder.drawAtlas(props);\n  }\n}\n"],"mappings":"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","ignoreList":[]}