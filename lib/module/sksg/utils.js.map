{"version":3,"names":["mapKeys","isSharedValue","value","_isReanimatedSharedValue","materialize","props","result","Object","assign","forEach","key","composeDeclarations","filters","composer","len","length","reduceRight","inner","outer"],"sources":["utils.ts"],"sourcesContent":["import type { SharedValue } from \"react-native-reanimated\";\n\nimport { mapKeys } from \"../renderer/typeddash\";\n\nexport const isSharedValue = <T = unknown>(\n  value: unknown\n): value is SharedValue<T> => {\n  \"worklet\";\n  // We cannot use `in` operator here because `value` could be a HostObject and therefore we cast.\n  return (value as Record<string, unknown>)?._isReanimatedSharedValue === true;\n};\n\nexport const materialize = <T extends object>(props: T) => {\n  \"worklet\";\n  const result: T = Object.assign({}, props);\n  mapKeys(result).forEach((key) => {\n    const value = result[key];\n    if (isSharedValue(value)) {\n      result[key] = value.value as never;\n    }\n  });\n  return result;\n};\n\ntype Composer<T> = (outer: T, inner: T) => T;\n\nexport const composeDeclarations = <T>(filters: T[], composer: Composer<T>) => {\n  \"worklet\";\n  const len = filters.length;\n  if (len <= 1) {\n    return filters[0];\n  }\n  return filters.reduceRight((inner, outer) =>\n    inner ? composer(outer, inner) : outer\n  );\n};\n"],"mappings":"AAEA,SAASA,OAAO,QAAQ,uBAAuB;AAE/C,OAAO,MAAMC,aAAa,GACxBC,KAAc,IACc;EAC5B,SAAS;;EACT;EACA,OAAO,CAACA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAA8BC,wBAAwB,MAAK,IAAI;AAC9E,CAAC;AAED,OAAO,MAAMC,WAAW,GAAsBC,KAAQ,IAAK;EACzD,SAAS;;EACT,MAAMC,MAAS,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,KAAK,CAAC;EAC1CL,OAAO,CAACM,MAAM,CAAC,CAACG,OAAO,CAAEC,GAAG,IAAK;IAC/B,MAAMR,KAAK,GAAGI,MAAM,CAACI,GAAG,CAAC;IACzB,IAAIT,aAAa,CAACC,KAAK,CAAC,EAAE;MACxBI,MAAM,CAACI,GAAG,CAAC,GAAGR,KAAK,CAACA,KAAc;IACpC;EACF,CAAC,CAAC;EACF,OAAOI,MAAM;AACf,CAAC;AAID,OAAO,MAAMK,mBAAmB,GAAGA,CAAIC,OAAY,EAAEC,QAAqB,KAAK;EAC7E,SAAS;;EACT,MAAMC,GAAG,GAAGF,OAAO,CAACG,MAAM;EAC1B,IAAID,GAAG,IAAI,CAAC,EAAE;IACZ,OAAOF,OAAO,CAAC,CAAC,CAAC;EACnB;EACA,OAAOA,OAAO,CAACI,WAAW,CAAC,CAACC,KAAK,EAAEC,KAAK,KACtCD,KAAK,GAAGJ,QAAQ,CAACK,KAAK,EAAED,KAAK,CAAC,GAAGC,KACnC,CAAC;AACH,CAAC","ignoreList":[]}