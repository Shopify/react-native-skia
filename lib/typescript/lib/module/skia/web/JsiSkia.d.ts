export function JsiSkApi(CanvasKit: any): {
    Point: (x: any, y: any) => JsiSkPoint;
    RuntimeShaderBuilder: (_: any) => jest.Mock<any, any, any>;
    RRectXY: (rect: any, rx: any, ry: any) => JsiSkRRect;
    RSXform: (scos: any, ssin: any, tx: any, ty: any) => JsiSkRSXform;
    RSXformFromRadians: (scale: any, r: any, tx: any, ty: any, px: any, py: any) => JsiSkRSXform;
    Color: (color: any) => Float32Array<ArrayBufferLike>;
    ContourMeasureIter: (path: any, forceClosed: any, resScale: any) => JsiSkContourMeasureIter;
    Paint: () => JsiSkPaint;
    PictureRecorder: () => JsiSkPictureRecorder;
    Picture: JsiSkPictureFactory;
    Path: JsiSkPathFactory;
    Matrix: (matrix: any) => JsiSkMatrix;
    ColorFilter: JsiSkColorFilterFactory;
    Font: (typeface: any, size: any) => JsiSkFont;
    Typeface: JsiSkTypefaceFactory;
    MaskFilter: JsiSkMaskFilterFactory;
    RuntimeEffect: JsiSkRuntimeEffectFactory;
    ImageFilter: JsiSkImageFilterFactory;
    Shader: JsiSkShaderFactory;
    PathEffect: JsiSkPathEffectFactory;
    MakeVertices: (mode?: any, positions?: any, textureCoordinates?: any, colors?: any, indices?: any, isVolatile?: any) => import("./JsiSkVertices").JsiSkVertices;
    Data: JsiSkDataFactory;
    Image: JsiSkImageFactory;
    AnimatedImage: JsiSkAnimatedImageFactory;
    SVG: JsiSkSVGFactory;
    TextBlob: JsiSkTextBlobFactory;
    XYWHRect: (x: any, y: any, width: any, height: any) => JsiSkRect;
    Surface: JsiSkSurfaceFactory;
    TypefaceFontProvider: JsiSkTypefaceFontProviderFactory;
    FontMgr: JsiSkFontMgrFactory;
    ParagraphBuilder: JsiSkParagraphBuilderFactory;
    NativeBuffer: JsiSkNativeBufferFactory;
    Video: (url?: any) => Promise<any>;
    Context: (_surface: any, _width: any, _height: any) => jest.Mock<any, any, any>;
    Recorder: () => jest.Mock<any, any, any>;
};
import { JsiSkPoint } from "./JsiSkPoint";
import { JsiSkRRect } from "./JsiSkRRect";
import { JsiSkRSXform } from "./JsiSkRSXform";
import { JsiSkContourMeasureIter } from "./JsiSkContourMeasureIter";
import { JsiSkPaint } from "./JsiSkPaint";
import { JsiSkPictureRecorder } from "./JsiSkPictureRecorder";
import { JsiSkPictureFactory } from "./JsiSkPictureFactory";
import { JsiSkPathFactory } from "./JsiSkPathFactory";
import { JsiSkMatrix } from "./JsiSkMatrix";
import { JsiSkColorFilterFactory } from "./JsiSkColorFilterFactory";
import { JsiSkFont } from "./JsiSkFont";
import { JsiSkTypefaceFactory } from "./JsiSkTypefaceFactory";
import { JsiSkMaskFilterFactory } from "./JsiSkMaskFilterFactory";
import { JsiSkRuntimeEffectFactory } from "./JsiSkRuntimeEffectFactory";
import { JsiSkImageFilterFactory } from "./JsiSkImageFilterFactory";
import { JsiSkShaderFactory } from "./JsiSkShaderFactory";
import { JsiSkPathEffectFactory } from "./JsiSkPathEffectFactory";
import { JsiSkDataFactory } from "./JsiSkDataFactory";
import { JsiSkImageFactory } from "./JsiSkImageFactory";
import { JsiSkAnimatedImageFactory } from "./JsiSkAnimatedImageFactory";
import { JsiSkSVGFactory } from "./JsiSkSVGFactory";
import { JsiSkTextBlobFactory } from "./JsiSkTextBlobFactory";
import { JsiSkRect } from "./JsiSkRect";
import { JsiSkSurfaceFactory } from "./JsiSkSurfaceFactory";
import { JsiSkTypefaceFontProviderFactory } from "./JsiSkTypefaceFontProviderFactory";
import { JsiSkFontMgrFactory } from "./JsiSkFontMgrFactory";
import { JsiSkParagraphBuilderFactory } from "./JsiSkParagraphBuilderFactory";
import { JsiSkNativeBufferFactory } from "./JsiSkNativeBufferFactory";
