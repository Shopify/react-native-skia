"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9071],{1e3:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/inheritance-1a42ffeca07d849aae6b7bfcd6bfbdfd.png"},1184:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(4041);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}},2504:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/assignement-6ff1d37b0630f312a497650bb5150dc5.png"},8161:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"paint/overview","title":"Painting","description":"Anytime you draw something in Skia, you want to specify what color it is, how it blends with the background, or what style to draw it in.","source":"@site/docs/paint/overview.md","sourceDirName":"paint","slug":"/paint/overview","permalink":"/react-native-skia/docs/paint/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/shopify/react-native-skia/edit/main/docs/docs/paint/overview.md","tags":[],"version":"current","frontMatter":{"id":"overview","title":"Painting","sidebar_label":"Overview","slug":"/paint/overview"},"sidebar":"tutorialSidebar","previous":{"title":"Contexts","permalink":"/react-native-skia/docs/canvas/contexts"},"next":{"title":"Properties","permalink":"/react-native-skia/docs/paint/properties"}}');var r=i(1085),s=i(1184);const a={id:"overview",title:"Painting",sidebar_label:"Overview",slug:"/paint/overview"},o=void 0,c={},l=[{value:"Fills and Strokes",id:"fills-and-strokes",level:2},{value:"Inheritance",id:"inheritance",level:2},{value:"Manual Paint Assignment",id:"manual-paint-assignment",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Anytime you draw something in Skia, you want to specify what color it is, how it blends with the background, or what style to draw it in.\nWe call these painting attributes.\nAnd in React Native Skia, these attributes can be specified as properties or as children of a drawing component (",(0,r.jsx)(n.code,{children:"<Rect />"}),", or ",(0,r.jsx)(n.code,{children:"<Circle />"})," for instance) or a ",(0,r.jsx)(n.code,{children:"<Group />"}),".\nThere is also a ",(0,r.jsx)(n.code,{children:"<Paint />"})," component which can be assigned directly to a drawing or group via its reference."]}),"\n",(0,r.jsx)(n.p,{children:"The following painting attributes can be assigned as properties:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/react-native-skia/docs/paint/properties#color",children:"color"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/react-native-skia/docs/paint/properties#blendmode",children:"blendMode"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/react-native-skia/docs/paint/properties#style",children:"style"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/react-native-skia/docs/paint/properties#strokewidth",children:"strokeWidth"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/react-native-skia/docs/paint/properties#strokejoin",children:"strokeJoin"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/react-native-skia/docs/paint/properties#strokecap",children:"strokeCap"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/react-native-skia/docs/paint/properties#strokemiter",children:"strokeMiter"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/react-native-skia/docs/paint/properties#opacity",children:"opacity"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/react-native-skia/docs/paint/properties#antialias",children:"antiAlias"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The following painting attributes can be assigned as children:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/shaders/overview",children:"Shaders"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/image-filters/overview",children:"Image Filters"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/color-filters",children:"Color Filters"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/mask-filters",children:"Mask Filters"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/path-effects",children:"Path Effects"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"fills-and-strokes",children:"Fills and Strokes"}),"\n",(0,r.jsx)(n.p,{children:"In Skia, a paint has a style property to indicate whether it is a fill or a stroke paint.\nWhen drawing something, you can pass Paint components as children to add strokes and fills.\nIn the example below, the circle has one light blue fill and two stroke paints."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",metastring:"twoslash",children:'import {Canvas, Circle, Paint, vec} from "@shopify/react-native-skia";\n\nconst width = 256;\nconst height = 256;\n\nexport const PaintDemo = () => {\n  const strokeWidth = 10;\n  const c = vec(width / 2, height / 2);\n  const r = (width - strokeWidth) / 2;\n  return (\n    <Canvas style={{ width, height}}>\n       <Circle c={c} r={r} color="red">\n        <Paint color="lightblue" />\n        <Paint color="#adbce6" style="stroke" strokeWidth={strokeWidth} />\n        <Paint color="#ade6d8" style="stroke" strokeWidth={strokeWidth / 2} />\n      </Circle>\n    </Canvas>\n  );\n};\n'})}),"\n",(0,r.jsx)("img",{alt:"Paint Fill and strokes",src:i(8950).A,width:"256",height:"256"}),"\n",(0,r.jsx)(n.h2,{id:"inheritance",children:"Inheritance"}),"\n",(0,r.jsx)(n.p,{children:"Descendants inherit the paint attributes.\nIn the example below, the first circle will be filled with a light blue color, and the second circle will have a light blue stroke."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",metastring:"twoslash",children:'import {Canvas, Circle, Paint, Group} from "@shopify/react-native-skia";\n\nconst width = 256;\nconst height = 256;\n\nexport const PaintDemo = () => {\n  const r = width / 6;\n  return (\n    <Canvas style={{ width, height }}>\n      <Group color="lightblue">\n        <Circle cx={r} cy={r} r={r} />\n        <Group style="stroke" strokeWidth={10}>\n          <Circle cx={3 * r} cy={3 * r} r={r} />\n        </Group>\n      </Group>\n    </Canvas>\n  );\n};\n'})}),"\n",(0,r.jsx)("img",{alt:"Paint Inheritance",src:i(1e3).A,width:"256",height:"256"}),"\n",(0,r.jsx)(n.p,{children:"Complex painting attributes like a shader or an image filter can be passed as children to a group or a drawing."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",metastring:"twoslash",children:'import {Canvas, Circle, Group, LinearGradient, vec} from "@shopify/react-native-skia";\n\nconst width = 256;\nconst height = 256;\n\nexport const PaintDemo = () => {\n  const r = width/2;\n  return (\n    <Canvas style={{ width, height }}>\n      <Circle cx={r} cy={r} r={r}>\n        <LinearGradient\n          start={vec(0, 0)}\n          end={vec(2 * r, 2 * r)}\n          colors={["#00ff87", "#60efff"]}\n        />\n      </Circle>\n      <Group>\n        <LinearGradient\n          start={vec(2 * r, 2 * r)}\n          end={vec(4 * r, 4 * r)}\n          colors={["#0061ff", "#60efff"]}\n        />\n        <Circle cx={3 * r} cy={3 * r} r={r} />\n      </Group>\n    </Canvas>\n  );\n};\n'})}),"\n",(0,r.jsx)("img",{src:i(9727).A,width:"256",height:"256"}),"\n",(0,r.jsx)(n.h2,{id:"manual-paint-assignment",children:"Manual Paint Assignment"}),"\n",(0,r.jsx)(n.p,{children:"Finally, we can assign a ref to a Paint component for later use."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",metastring:"twoslash",children:'import {Canvas, Circle, Paint, Skia} from "@shopify/react-native-skia";\nconst width = 256;\nconst height = 256;\nconst r = width / 2;\nconst paint = Skia.Paint();\npaint.setColor(Skia.Color("lightblue"));\n\nexport const PaintDemo = () => {\n  return (\n    <Canvas style={{ flex: 1 }}>\n      <Circle paint={paint} cx={r} cy={r} r={r} />\n    </Canvas>\n  );\n};\n'})}),"\n",(0,r.jsx)("img",{src:i(2504).A,width:"256",height:"256"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8950:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/stroke-d0007afee48595c6d95e87f2e8279989.png"},9727:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/complex-paint-0504e8da2e1c375b23645ef69e6d04d4.png"}}]);