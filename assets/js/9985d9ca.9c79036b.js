"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5317],{155:(e,a,n)=>{n.d(a,{A:()=>t});const t=n.p+"assets/images/bird-252198b761411ef7c55c7d705dbb63f8.gif"},1184:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>d});var t=n(4041);const i={},s=t.createContext(i);function r(e){const a=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:a},e.children)}},9100:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>m,contentTitle:()=>d,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"animated-images","title":"Animated Images","description":"React Native Skia supports animated images. Supported formats are GIF and animated WebP.","source":"@site/docs/animated-images.md","sourceDirName":".","slug":"/animated-images","permalink":"/react-native-skia/docs/animated-images","draft":false,"unlisted":false,"editUrl":"https://github.com/shopify/react-native-skia/edit/main/docs/docs/animated-images.md","tags":[],"version":"current","frontMatter":{"id":"animated-images","title":"Animated Images","sidebar_label":"Animated Images","slug":"/animated-images"},"sidebar":"tutorialSidebar","previous":{"title":"Image","permalink":"/react-native-skia/docs/images"},"next":{"title":"SVG","permalink":"/react-native-skia/docs/images-svg"}}');var i=n(1085),s=n(1184);const r={id:"animated-images",title:"Animated Images",sidebar_label:"Animated Images",slug:"/animated-images"},d=void 0,m={},o=[{value:"Using Reanimated",id:"using-reanimated",level:2},{value:"Manual API",id:"manual-api",level:2}];function c(e){const a={code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.p,{children:"React Native Skia supports animated images. Supported formats are GIF and animated WebP."}),"\n",(0,i.jsx)(a.h2,{id:"using-reanimated",children:"Using Reanimated"}),"\n",(0,i.jsxs)(a.p,{children:["If you use Reanimated, we offer a ",(0,i.jsx)(a.code,{children:"useAnimatedImageValue"})," hook that does everything automatically. ",(0,i.jsx)(a.code,{children:"useAnimatedImageValue"})," returns a shared value that automatically updates on every frame."]}),"\n",(0,i.jsxs)(a.p,{children:["In the example below, we display and animate a GIF using Reanimated. The shared value is first null, and once the image is loaded, it will update with an ",(0,i.jsx)(a.code,{children:"SkImage"})," object on every frame."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-tsx",metastring:"twoslash",children:'import React from "react";\nimport {\n  Canvas,\n  Image,\n  useAnimatedImageValue,\n} from "@shopify/react-native-skia";\n\nexport const AnimatedImages = () => {\n  // This can be an animated GIF or WebP file\n  const bird = useAnimatedImageValue(\n    require("../../assets/birdFlying.gif")\n  );\n  return (\n      <Canvas\n        style={{\n          width: 320,\n          height: 180,\n        }}\n      >\n        <Image\n          image={bird}\n          x={0}\n          y={0}\n          width={320}\n          height={180}\n          fit="contain"\n        />\n      </Canvas>\n  );\n};\n\n'})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.img,{alt:"bird",src:n(155).A+"",width:"825",height:"465"})}),"\n",(0,i.jsx)(a.p,{children:"There is a second optional parameter available to control the pausing of the animation via a shared value."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-tsx",metastring:"twoslash",children:'import React from "react";\nimport {Pressable} from "react-native";\nimport {useSharedValue} from "react-native-reanimated";\nimport {\n  Canvas,\n  Image,\n  useAnimatedImageValue,\n} from "@shopify/react-native-skia";\n\nexport const AnimatedImages = () => {\n  const isPaused = useSharedValue(false);\n  // This can be an animated GIF or WebP file\n  const bird = useAnimatedImageValue(\n    require("../../assets/birdFlying.gif"),\n    isPaused\n  );\n  return (\n    <Pressable onPress={() => isPaused.value = !isPaused.value}>\n      <Canvas\n        style={{\n          width: 320,\n          height: 180,\n        }}\n      >\n        <Image\n          image={bird}\n          x={0}\n          y={0}\n          width={320}\n          height={180}\n          fit="contain"\n        />\n      </Canvas>\n    </Pressable>\n  );\n};\n\n'})}),"\n",(0,i.jsx)(a.h2,{id:"manual-api",children:"Manual API"}),"\n",(0,i.jsxs)(a.p,{children:["To load an image as a ",(0,i.jsx)(a.code,{children:"SkAnimatedImage"})," object, we offer a ",(0,i.jsx)(a.code,{children:"useAnimatedImage"})," hook:"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-tsx",metastring:"twoslash",children:'import {useAnimatedImage} from "@shopify/react-native-skia";\n\n// bird is an SkAnimatedImage\nconst bird = useAnimatedImage(\n  require("../../assets/birdFlying.gif")\n)!;\n// SkAnimatedImage offers 4 methods: decodeNextFrame(), getCurrentFrame(), currentFrameDuration(), and getFrameCount()\n// getCurrentFrame() returns a regular SkImage\nconst image = bird.getCurrentFrame();\n// decode the next frame\nbird.decodeNextFrame();\n// fetch the current frame number\nconst currentFrame = bird.currentFrameDuration();\n// fetch the total number of frames\nconst frameCount = bird.getFrameCount();\nconsole.log({ frameCount, currentFrame, image });\n'})})]})}function l(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);