"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5036],{1184:(e,t,l)=>{l.d(t,{R:()=>i,x:()=>o});var n=l(4041);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}},2914:(e,t,l)=>{l.d(t,{A:()=>n});const n=l.p+"assets/images/color-matrix-ab7326511efaf32a679d38ab82405ac2.png"},3130:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>x,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"color-filters","title":"Color Filters","description":"Color Matrix","source":"@site/docs/color-filters.md","sourceDirName":".","slug":"/color-filters","permalink":"/react-native-skia/docs/color-filters","draft":false,"unlisted":false,"editUrl":"https://github.com/shopify/react-native-skia/edit/main/docs/docs/color-filters.md","tags":[],"version":"current","frontMatter":{"id":"color-filters","title":"Color Filters","sidebar_label":"Color Filters","slug":"/color-filters"},"sidebar":"tutorialSidebar","previous":{"title":"Mask Filters","permalink":"/react-native-skia/docs/mask-filters"},"next":{"title":"Mask","permalink":"/react-native-skia/docs/mask"}}');var r=l(1085),s=l(1184);const i={id:"color-filters",title:"Color Filters",sidebar_label:"Color Filters",slug:"/color-filters"},o=void 0,a={},c=[{value:"Color Matrix",id:"color-matrix",level:2},{value:"BlendColor",id:"blendcolor",level:2},{value:"Lerp",id:"lerp",level:2},{value:"LinearToSRGBGamma",id:"lineartosrgbgamma",level:2},{value:"SRGBToLinearGamma",id:"srgbtolineargamma",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"color-matrix",children:"Color Matrix"}),"\n",(0,r.jsxs)(t.p,{children:["Creates a color filter using the provided color matrix.\nA playground to build color matrices is available ",(0,r.jsx)(t.a,{href:"https://fecolormatrix.com/",children:"here"}),"."]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"matrix"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"number[]"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Color Matrix (5x4)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"children?"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"ColorFilter"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Optional color filter to be applied first."})]})]})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:"twoslash",children:'import {\n  Canvas,\n  ColorMatrix,\n  Image,\n  useImage,\n} from "@shopify/react-native-skia";\n\nconst MatrixColorFilter = () => {\n  const image = useImage(require("./assets/oslo.jpg"));\n\n  return (\n    <Canvas style={{ flex: 1 }}>\n      <Image x={0} y={0} width={256} height={256} image={image} fit="cover">\n        <ColorMatrix\n          matrix={[\n            -0.578, 0.99, 0.588, 0, 0, 0.469, 0.535, -0.003, 0, 0, 0.015, 1.69,\n            -0.703, 0, 0, 0, 0, 0, 1, 0,\n          ]}\n        />\n      </Image>\n    </Canvas>\n  );\n};\n'})}),"\n",(0,r.jsx)("img",{src:l(2914).A,width:"256",height:"256"}),"\n",(0,r.jsx)(t.h2,{id:"blendcolor",children:"BlendColor"}),"\n",(0,r.jsx)(t.p,{children:"Creates a color filter with the given color and blend mode."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"color"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"Color"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Color"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"mode"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"BlendMode"})}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:["see ",(0,r.jsx)(t.a,{href:"/react-native-skia/docs/paint/properties#blend-mode",children:"blend modes"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"children?"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"ColorFilter"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Optional color filter to be applied first."})]})]})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:"twoslash",children:'import { Canvas, BlendColor, Group, Circle } from "@shopify/react-native-skia";\n\nconst MatrixColorFilter = () => {\n  const r = 128;\n  return (\n    <Canvas style={{ flex: 1 }}>\n      <Group>\n        <BlendColor color="cyan" mode="multiply" />\n        <Circle cx={r} cy={r} r={r} color="yellow" />\n        <Circle cx={2 * r} cy={r} r={r} color="magenta" />\n      </Group>\n    </Canvas>\n  );\n};\n'})}),"\n",(0,r.jsx)("img",{src:l(4612).A,width:"256",height:"256"}),"\n",(0,r.jsx)(t.h2,{id:"lerp",children:"Lerp"}),"\n",(0,r.jsx)(t.p,{children:"Creates a color filter that is linearly interpolated between two other color filters."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"t"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"number"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Value between 0 and 1."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"children"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"ColorFilter"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"The two filters to interpolate from."})]})]})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:"twoslash",children:'import {\n  Canvas,\n  ColorMatrix,\n  Image,\n  useImage,\n  Lerp,\n} from "@shopify/react-native-skia";\n\nconst MatrixColorFilter = () => {\n  const image = useImage(require("./assets/oslo.jpg"));\n\n  const blackAndWhite = [\n    0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0,\n  ];\n  const purple = [\n    1, -0.2, 0, 0, 0, 0, 1, 0, -0.1, 0, 0, 1.2, 1, 0.1, 0, 0, 0, 1.7, 1, 0,\n  ];\n  return (\n    <Canvas style={{ flex: 1 }}>\n      <Image x={0} y={0} width={256} height={256} image={image} fit="cover">\n        <Lerp t={0.5}>\n          <ColorMatrix matrix={purple} />\n          <ColorMatrix matrix={blackAndWhite} />\n        </Lerp>\n      </Image>\n    </Canvas>\n  );\n};\n'})}),"\n",(0,r.jsx)(t.h2,{id:"lineartosrgbgamma",children:"LinearToSRGBGamma"}),"\n",(0,r.jsx)(t.p,{children:"Creates a color filter that converts between linear colors and sRGB colors."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"children?"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"ColorFilter"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Optional color filter to be applied first."})]})})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:"twoslash",children:'import {\n  Canvas,\n  BlendColor,\n  Group,\n  Circle,\n  LinearToSRGBGamma,\n} from "@shopify/react-native-skia";\n\nconst MatrixColorFilter = () => {\n  const r = 128;\n  return (\n    <Canvas style={{ flex: 1 }}>\n      <Group>\n        <LinearToSRGBGamma>\n          <BlendColor color="lightblue" mode="srcIn" />\n        </LinearToSRGBGamma>\n        <Circle cx={r} cy={r} r={r} />\n      </Group>\n    </Canvas>\n  );\n};\n'})}),"\n",(0,r.jsx)(t.h2,{id:"srgbtolineargamma",children:"SRGBToLinearGamma"}),"\n",(0,r.jsx)(t.p,{children:"Creates a color filter that converts between sRGB colors and linear colors."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"children?"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"ColorFilter"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Optional color filter to be applied first."})]})})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:"twoslash",children:'import {\n  Canvas,\n  BlendColor,\n  Group,\n  Circle,\n  SRGBToLinearGamma,\n} from "@shopify/react-native-skia";\n\nconst MatrixColorFilter = () => {\n  const r = 128;\n  return (\n    <Canvas style={{ flex: 1 }}>\n      <Group>\n        <SRGBToLinearGamma>\n          <BlendColor color="lightblue" mode="srcIn" />\n        </SRGBToLinearGamma>\n        <Circle cx={r} cy={r} r={r} />\n      </Group>\n    </Canvas>\n  );\n};\n'})})]})}function x(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},4612:(e,t,l)=>{l.d(t,{A:()=>n});const n=l.p+"assets/images/color-blend-45a6ac4458b79383e5c23d7f022103d8.png"}}]);